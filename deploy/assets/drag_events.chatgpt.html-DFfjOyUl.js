import{_ as a,c as s,f as e,o as t}from"./app-B8TszOv9.js";const o={};function p(c,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="拖动事件-drag-events" tabindex="-1"><a class="header-anchor" href="#拖动事件-drag-events"><span>拖动事件 (Drag Events)</span></a></h1><p><strong>拖动事件</strong> 发生在用户在设备屏幕上滑动手指，或者在按住鼠标按钮的同时移动鼠标时。</p><p>如果用户使用多根手指，则可能会同时触发多个拖动事件。<br> Flame 能正确处理此类情况，您甚至可以通过拖动事件的 <code>pointerId</code> 属性来跟踪各个事件。</p><p>要使组件响应拖动事件，可以为其添加 <code>DragCallbacks</code> 混入。</p><ul><li>此混入会为组件添加四个可重写的方法：<code>onDragStart</code>、<code>onDragUpdate</code>、<code>onDragEnd</code> 和 <code>onDragCancel</code>。<br> 默认情况下，这些方法不执行任何操作，必须重写这些方法才能实现功能。</li><li>此外，组件必须实现 <code>containsLocalPoint()</code> 方法（<code>PositionComponent</code> 已实现此方法，大多数情况下无需额外操作），<br> 通过此方法，Flame 能判断事件是否发生在组件内。</li></ul><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">PositionComponent</span> <span class="token keyword">with</span> <span class="token class-name">DragCallbacks</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">   <span class="token metadata function">@override</span></span>
<span class="line">   <span class="token keyword">void</span> <span class="token function">onDragStart</span><span class="token punctuation">(</span><span class="token class-name">DragStartEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token comment">// 响应拖动事件</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>在以下示例中，您可以使用拖动手势将类似星星的形状拖动到屏幕上，或者在品红色矩形内绘制曲线。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: drag_events</span>
<span class="line">:show: widget code</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖动事件解析" tabindex="-1"><a class="header-anchor" href="#拖动事件解析"><span>拖动事件解析</span></a></h2><h3 id="ondragstart" tabindex="-1"><a class="header-anchor" href="#ondragstart"><span>onDragStart</span></a></h3><p>这是拖动序列中的第一个事件。通常，该事件会被传递给触摸点处最上层的具有 <code>DragCallbacks</code> 的组件。<br> 不过，如果将标志 <code>event.continuePropagation</code> 设置为 <code>true</code>，事件可以继续传递给下方的组件。</p><p>与此事件关联的 <code>DragStartEvent</code> 对象包含事件触发点的坐标。<br> 这些坐标有多个坐标系版本：</p><ul><li><code>devicePosition</code> 是设备整体的坐标系，</li><li><code>canvasPosition</code> 是游戏画布的坐标系，</li><li><code>localPosition</code> 是组件的本地坐标系。</li></ul><p>任何接收到 <code>onDragStart</code> 的组件都会接收到同一 <code>pointerId</code> 对应的后续 <code>onDragUpdate</code> 和 <code>onDragEnd</code> 事件。</p><h3 id="ondragupdate" tabindex="-1"><a class="header-anchor" href="#ondragupdate"><span>onDragUpdate</span></a></h3><p>当用户在屏幕上拖动手指时，会连续触发此事件。如果用户的手指保持静止，则不会触发该事件。</p><p>默认情况下，此事件会传递给接收到相同 <code>pointerId</code> 的 <code>onDragStart</code> 的所有组件。<br> 如果触摸点仍位于组件内，则 <code>event.localPosition</code> 会返回该点在组件本地坐标系中的位置。<br> 如果用户将手指移出了组件，则 <code>event.localPosition</code> 会返回包含 NaN 的坐标，而 <code>event.renderingTrace</code> 也会为空。<br> 不过，此时的 <code>event.canvasPosition</code> 和 <code>event.devicePosition</code> 属性仍然有效。</p><p>此外，<code>DragUpdateEvent</code> 包含 <code>delta</code> 属性，表示手指自上次 <code>onDragUpdate</code> 或自 <code>onDragStart</code> 以来移动的距离。</p><p>事件的 <code>event.timestamp</code> 属性表示自拖动开始以来的时间，可以用于计算移动速度等。</p><h3 id="ondragend" tabindex="-1"><a class="header-anchor" href="#ondragend"><span>onDragEnd</span></a></h3><p>当用户抬起手指停止拖动时，会触发此事件。<br> 此事件不包含位置相关信息。</p><h3 id="ondragcancel" tabindex="-1"><a class="header-anchor" href="#ondragcancel"><span>onDragCancel</span></a></h3><p>此事件触发的确切语义尚不明确，因此默认实现会将其转换为 <code>onDragEnd</code> 事件。</p><h2 id="混入-mixins" tabindex="-1"><a class="header-anchor" href="#混入-mixins"><span>混入 (Mixins)</span></a></h2><h3 id="dragcallbacks" tabindex="-1"><a class="header-anchor" href="#dragcallbacks"><span>DragCallbacks</span></a></h3><p><code>DragCallbacks</code> 混入可以添加到任意 <code>Component</code> 中，从而使组件接收拖动事件。</p><p>该混入添加了 <code>onDragStart</code>、<code>onDragUpdate</code>、<code>onDragEnd</code> 和 <code>onDragCancel</code> 方法，默认情况下这些方法不执行任何操作，但可以通过重写它们实现具体功能。</p><p>另一个关键细节是，组件只能接收起始于组件内部的拖动事件，这由 <code>containsLocalPoint()</code> 方法决定。<br> 常用的 <code>PositionComponent</code> 类基于其 <code>size</code> 属性提供了 <code>containsLocalPoint()</code> 方法的实现。因此，如果您的组件继承自 <code>PositionComponent</code>，请确保正确设置其尺寸。<br> 如果您的组件直接继承自基础 <code>Component</code>，则必须手动实现 <code>containsLocalPoint()</code> 方法。</p><p>如果组件属于更大的层级结构，则只有当其所有父级组件正确实现 <code>containsLocalPoint</code> 时，它才能接收拖动事件。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">PositionComponent</span> <span class="token keyword">with</span> <span class="token class-name">DragCallbacks</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">.</span>size<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">final</span> _paint <span class="token operator">=</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  bool _isDragged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">onDragStart</span><span class="token punctuation">(</span><span class="token class-name">DragStartEvent</span> event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _isDragged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">onDragUpdate</span><span class="token punctuation">(</span><span class="token class-name">DragUpdateEvent</span> event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> position <span class="token operator">+=</span> event<span class="token punctuation">.</span>delta<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">onDragEnd</span><span class="token punctuation">(</span><span class="token class-name">DragEndEvent</span> event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _isDragged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    _paint<span class="token punctuation">.</span>color <span class="token operator">=</span> _isDragged <span class="token operator">?</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red <span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">;</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span><span class="token function">toRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _paint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31)]))}const i=a(o,[["render",p],["__file","drag_events.chatgpt.html.vue"]]),d=JSON.parse('{"path":"/guide/flame/inputs/drag_events.chatgpt.html","title":"拖动事件 (Drag Events)","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"拖动事件解析","slug":"拖动事件解析","link":"#拖动事件解析","children":[{"level":3,"title":"onDragStart","slug":"ondragstart","link":"#ondragstart","children":[]},{"level":3,"title":"onDragUpdate","slug":"ondragupdate","link":"#ondragupdate","children":[]},{"level":3,"title":"onDragEnd","slug":"ondragend","link":"#ondragend","children":[]},{"level":3,"title":"onDragCancel","slug":"ondragcancel","link":"#ondragcancel","children":[]}]},{"level":2,"title":"混入 (Mixins)","slug":"混入-mixins","link":"#混入-mixins","children":[{"level":3,"title":"DragCallbacks","slug":"dragcallbacks","link":"#dragcallbacks","children":[]}]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/inputs/drag_events.chatgpt.md"}');export{i as comp,d as data};
