import{_ as s,c as a,f as e,o as c}from"./app-B8TszOv9.js";const t={};function l(o,n){return c(),a("div",null,n[0]||(n[0]=[e(`<h1 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h1><p>在此页面，您可以找到一些工具类和方法的文档。</p><h2 id="设备类" tabindex="-1"><a class="header-anchor" href="#设备类"><span>设备类</span></a></h2><p>这个类可以通过 <code>Flame.device</code> 访问，并且提供一些方法来控制设备的状态。例如，您可以更改屏幕方向，设置应用程序是否为全屏等。</p><h3 id="flame-device-fullscreen" tabindex="-1"><a class="header-anchor" href="#flame-device-fullscreen"><span><code>Flame.device.fullScreen()</code></span></a></h3><p>调用此方法时，会禁用所有 <code>SystemUiOverlay</code>，使应用程序全屏显示。<br> 在主方法中调用时，它会使应用程序全屏（无顶部或底部的条）。</p><p><strong>注意：</strong> 在网页端调用时没有效果。</p><h3 id="flame-device-setlandscape" tabindex="-1"><a class="header-anchor" href="#flame-device-setlandscape"><span><code>Flame.device.setLandscape()</code></span></a></h3><p>此方法将整个应用程序（实际上也包括游戏）的方向设置为横屏，具体行为根据操作系统和设备设置可能支持左右横屏方向。<br> 如果您想将应用程序的方向设置为特定方向的横屏，可以使用 <code>Flame.device.setLandscapeLeftOnly</code> 或 <code>Flame.device.setLandscapeRightOnly</code>。</p><p><strong>注意：</strong> 在网页端调用时没有效果。</p><h3 id="flame-device-setportrait" tabindex="-1"><a class="header-anchor" href="#flame-device-setportrait"><span><code>Flame.device.setPortrait()</code></span></a></h3><p>此方法将整个应用程序（实际上也包括游戏）的方向设置为竖屏，具体行为根据操作系统和设备设置可能支持上下竖屏方向。<br> 如果您想将应用程序的方向设置为特定方向的竖屏，可以使用 <code>Flame.device.setPortraitUpOnly</code> 或 <code>Flame.device.setPortraitDownOnly</code>。</p><p><strong>注意：</strong> 在网页端调用时没有效果。</p><h3 id="flame-device-setorientation-和-flame-device-setorientations" tabindex="-1"><a class="header-anchor" href="#flame-device-setorientation-和-flame-device-setorientations"><span><code>Flame.device.setOrientation()</code> 和 <code>Flame.device.setOrientations()</code></span></a></h3><p>如果需要更精细地控制允许的方向（无需直接操作 <code>SystemChrome</code>），可以使用 <code>setOrientation</code>（接受单个 <code>DeviceOrientation</code> 作为参数）和 <code>setOrientations</code>（接受一个 <code>List&lt;DeviceOrientation&gt;</code> 来指定可能的方向）。</p><p><strong>注意：</strong> 在网页端调用时没有效果。</p><h2 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器"><span>定时器</span></a></h2><p>Flame 提供了一个简单的工具类来帮助您处理倒计时和定时器状态变化事件。</p><p>倒计时示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/input.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">Game</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">TextPaint</span> textPaint <span class="token operator">=</span> <span class="token class-name">TextPaint</span><span class="token punctuation">(</span></span>
<span class="line">    style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">final</span> countdown <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    countdown<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>countdown<span class="token punctuation">.</span>finished<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 优先使用定时器回调，但在某些情况下，这更好</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    textPaint<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">      canvas<span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&quot;Countdown: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">countdown<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>间隔示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/input.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">Game</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">TextPaint</span> textPaint <span class="token operator">=</span> <span class="token class-name">TextPaint</span><span class="token punctuation">(</span></span>
<span class="line">    style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">Timer</span> interval<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  int elapsedSecs <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">MyGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    interval <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">      onTick<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> elapsedSecs <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">      repeat<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    interval<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    textPaint<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Elapsed time: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">elapsedSecs</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Timer</code> 实例还可以通过使用 <code>TimerComponent</code> 类在 <code>FlameGame</code> 游戏中使用。</p><p><code>TimerComponent</code> 示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/timer.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyFlameGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">MyFlameGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token class-name">TimerComponent</span><span class="token punctuation">(</span></span>
<span class="line">        period<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        repeat<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        onTick<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;10秒已过&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间缩放" tabindex="-1"><a class="header-anchor" href="#时间缩放"><span>时间缩放</span></a></h2><p>在许多游戏中，通常希望基于游戏中的一些事件来创建慢动作或快进效果。实现这些效果的一种常见方法是操控游戏内时间或滴答频率。</p><p>为简化这种操作，Flame 提供了一个 <code>HasTimeScale</code> 混合类。该混合类可以附加到任何 Flame <code>Component</code>，并提供简单的 <code>timeScale</code> 的获取和设置 API。<code>timeScale</code> 的默认值是 <code>1</code>，表示组件的游戏时间与现实时间的速度相同。将其设置为 <code>2</code> 将使组件的滴答速度加倍，而设置为 <code>0.5</code> 会使组件的滴答速度减半。该混合类还提供了 <code>pause</code> 和 <code>resume</code> 方法，您可以使用这些方法代替手动将 <code>timeScale</code> 设置为 <code>0</code> 和 <code>1</code>。</p><p>由于 <code>FlameGame</code> 本身也是一个 <code>Component</code>，因此您也可以将此混合类附加到 <code>FlameGame</code>。这样，您就可以从一个地方控制游戏中所有组件的时间缩放。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">HasTimeScale 不能单独控制 \`flame_forge2d\` 中的 \`BodyComponent\` 的移动。  </span>
<span class="line">只有在整个游戏或 Forge2DWorld 需要进行时间缩放时，它才有用。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyFlameGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token keyword">with</span> <span class="token class-name">HasTimeScale</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">speedUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    timeScale <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">slowDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    timeScale <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展"><span>扩展</span></a></h2><p>Flame 提供了一些有用的扩展，这些扩展旨在帮助开发者提供快捷方式和转换方法。以下是这些扩展的概述。</p><p>所有扩展都可以从 <code>package:flame/extensions.dart</code> 导入。</p><h3 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas"><span>Canvas</span></a></h3><p>方法：</p><ul><li><code>scaleVector</code>：与 <code>canvas scale</code> 方法相似，但接受 <code>Vector2</code> 作为参数。</li><li><code>translateVector</code>：与 <code>canvas translate</code> 方法相似，但接受 <code>Vector2</code> 作为参数。</li><li><code>renderPoint</code>：在画布上渲染一个点（主要用于调试）。</li><li><code>renderAt</code> 和 <code>renderRotated</code>：如果直接向 <code>Canvas</code> 渲染，可以使用这些函数轻松调整坐标，以便在正确的位置渲染内容。它们会改变 <code>Canvas</code> 的转换矩阵，但会在之后重置。</li></ul><h3 id="颜色" tabindex="-1"><a class="header-anchor" href="#颜色"><span>颜色</span></a></h3><p>方法：</p><ul><li><code>darken</code>：将颜色的色调按 0 到 1 之间的值变暗。</li><li><code>brighten</code>：将颜色的色调按 0 到 1 之间的值变亮。</li></ul><p>工厂方法：</p><ul><li><code>ColorExtension.fromRGBHexString</code>：从有效的十六进制字符串（如 #1C1C1C）解析 RGB 颜色。</li><li><code>ColorExtension.fromARGBHexString</code>：从有效的十六进制字符串（如 #FF1C1C1C）解析 ARGB 颜色。</li></ul><h3 id="图像" tabindex="-1"><a class="header-anchor" href="#图像"><span>图像</span></a></h3><p>方法：</p><ul><li><code>pixelsInUint8</code>：以 <code>Uint8List</code> 的形式检索图像的像素数据，格式为 <code>ImageByteFormat.rawRgba</code>。</li><li><code>getBoundingRect</code>：获取图像的边界矩形，返回 <code>Rect</code>。</li><li><code>size</code>：获取图像的大小，返回 <code>Vector2</code>。</li><li><code>darken</code>：将图像中的每个像素按 0 到 1 之间的值变暗。</li><li><code>brighten</code>：将图像中的每个像素按 0 到 1 之间的值变亮。</li></ul><h3 id="偏移量" tabindex="-1"><a class="header-anchor" href="#偏移量"><span>偏移量</span></a></h3><p>方法：</p><ul><li><code>toVector2</code>：将 <code>Offset</code> 转换为 <code>Vector2</code>。</li><li><code>toSize</code>：将 <code>Offset</code> 转换为 <code>Size</code>。</li><li><code>toPoint</code>：将 <code>Offset</code> 转换为 <code>Point</code>。</li><li><code>toRect</code>：创建一个从 (0,0) 开始的矩形，右下角为该 <code>Offset</code>。</li></ul><h3 id="矩形" tabindex="-1"><a class="header-anchor" href="#矩形"><span>矩形</span></a></h3><p>方法：</p><ul><li><code>toOffset</code>：将 <code>Rect</code> 转换为 <code>Offset</code>。</li><li><code>toVector2</code>：将 <code>Rect</code> 转换为 <code>Vector2</code>，从 (0,0) 到矩形的大小。</li><li><code>containsPoint</code>：检查该矩形是否包含给定的 <code>Vector2</code> 点。</li><li><code>intersectsSegment</code>：检查由两个 <code>Vector2</code> 组成的线段是否与该矩形相交。</li><li><code>intersectsLineSegment</code>：检查 <code>LineSegment</code> 是否与矩形相交。</li><li><code>toVertices</code>：将矩形的四个角转换为 <code>Vector2</code> 列表。</li><li><code>toFlameRectangle</code>：将该 <code>Rect</code> 转换为 Flame 的 <code>Rectangle</code>。</li><li><code>toMathRectangle</code>：将该 <code>Rect</code> 转换为 <code>math.Rectangle</code>。</li><li><code>toGeometryRectangle</code>：将该 <code>Rect</code> 转换为来自 flame-geom 的 <code>Rectangle</code>。</li><li><code>transform</code>：使用 <code>Matrix4</code> 转换 <code>Rect</code>。</li></ul><p>工厂方法：</p><ul><li><code>RectExtension.getBounds</code>：构造一个表示 <code>Vector2</code> 列表边界的 <code>Rect</code>。</li><li><code>RectExtension.fromCenter</code>：根据中心点（使用 <code>Vector2</code>）构造一个 <code>Rect</code>。</li></ul><h3 id="math-rectangle" tabindex="-1"><a class="header-anchor" href="#math-rectangle"><span>math.Rectangle</span></a></h3><p>方法：</p><ul><li><code>toRect</code>：将 <code>math.Rectangle</code> 转换为 <code>ui.Rect</code>。</li></ul><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size"><span>Size</span></a></h3><p>方法：</p><ul><li><code>toVector2</code>：将 <code>Size</code> 转换为 <code>Vector2</code>。</li><li><code>toOffset</code>：将 <code>Size</code> 转换为 <code>Offset</code>。</li><li><code>toPoint</code>：将 <code>Size</code> 转换为 <code>Point</code>。</li><li><code>toRect</code>：将 <code>Size</code> 转换为从 (0,0) 开始的 <code>Rect</code>，大小为 <code>Size</code>。</li></ul><h3 id="vector2" tabindex="-1"><a class="header-anchor" href="#vector2"><span>Vector2</span></a></h3><p>该类来自 <code>vector_math</code> 包，并且我们在其基础上添加了一些有用的扩展方法。</p><p>方法：</p><ul><li><code>toOffset</code>：将 <code>Vector2</code> 转换为 <code>Offset</code>。</li><li><code>toPoint</code>：将 <code>Vector2</code> 转换为 <code>Point</code>。</li><li><code>toRect</code>：将 <code>Vector2</code> 转换为从 (0,0) 开始的 <code>Rect</code>，大小为 <code>Vector2</code>。</li><li><code>toPositionedRect</code>：将 <code>Vector2</code> 中的 [x, y] 作为起点，创建一个 <code>Rect</code>，其大小为 <code>Vector2</code> 参数的大小。</li><li><code>lerp</code>：将 <code>Vector2</code> 向另一个 <code>Vector2</code> 线性插值。</li><li><code>rotate</code>：用弧度指定的角度旋转 <code>Vector2</code>，可以选择定义旋转中心。</li><li><code>scaleTo</code>：将 <code>Vector2</code> 的长度改变为指定的长度，而不改变方向。</li><li><code>moveToTarget</code>：将 <code>Vector2</code> 平滑地移动到目标方向指定的距离。</li></ul><p>工厂方法：</p><ul><li><code>Vector2Extension.fromInts</code>：使用整数输入创建 <code>Vector2</code>。</li></ul><p>运算符：</p><ul><li><code>&amp;</code>：将两个 <code>Vector2</code> 组合成一个矩形，左边为原点，右边为大小。</li><li><code>%</code>：对两个 <code>Vector2</code> 的 x 和 y 分别执行取模/余数运算。</li></ul><h3 id="matrix4" tabindex="-1"><a class="header-anchor" href="#matrix4"><span>Matrix4</span></a></h3><p>该类来自 <code>vector_math</code> 包，我们在其基础上添加了一些扩展方法。</p><p>方法：</p><ul><li><code>translate2</code>：通过给定的 <code>Vector2</code> 平移 <code>Matrix4</code>。</li><li><code>transform2</code>：通过 <code>Matrix4</code> 转换给定的 <code>Vector2</code>，返回一个新的 <code>Vector2</code>。</li><li><code>transformed2</code>：将输入的 <code>Vector2</code> 转换为输出的 <code>Vector2</code>。</li></ul><p>获取器：</p><ul><li><code>m11</code>：矩阵的第一行第一列。</li><li><code>m12</code>：矩阵的第一行第二列。</li><li><code>m13</code>：矩阵的第一行第三列。</li><li><code>m14</code>：矩阵的第一行第四列。</li><li><code>m21</code>：矩阵的第二行第一列。</li><li><code>m22</code>：矩阵的第二行第二列。</li><li><code>m23</code>：矩阵的第二行第三列。</li><li><code>m24</code>：矩阵的第二行第四列。</li><li><code>m31</code>：矩阵的第三行第一列。</li><li><code>m32</code>：矩阵的第三行第二列。</li><li><code>m33</code>：矩阵的第三行第三列。</li><li><code>m34</code>：矩阵的第三行第四列。</li><li><code>m41</code>：矩阵的第四行第一列。</li><li><code>m42</code>：矩阵的第四行第二列。</li><li><code>m43</code>：矩阵的第四行第三列。</li><li><code>m44</code>：矩阵的第四行第四列。</li></ul><p>工厂方法：</p><ul><li><code>Matrix4Extension.scale</code>：创建一个缩放的 <code>Matrix4</code>，可以传递一个 <code>Vector4</code> 或 <code>Vector2</code> 作为第一个参数，或者传递三个 <code>double</code> 类型的 x、y、z 参数。</li></ul>`,75)]))}const i=s(t,[["render",l],["__file","util.chatgpt.html.vue"]]),d=JSON.parse('{"path":"/guide/flame/other/util.chatgpt.html","title":"工具","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"设备类","slug":"设备类","link":"#设备类","children":[{"level":3,"title":"Flame.device.fullScreen()","slug":"flame-device-fullscreen","link":"#flame-device-fullscreen","children":[]},{"level":3,"title":"Flame.device.setLandscape()","slug":"flame-device-setlandscape","link":"#flame-device-setlandscape","children":[]},{"level":3,"title":"Flame.device.setPortrait()","slug":"flame-device-setportrait","link":"#flame-device-setportrait","children":[]},{"level":3,"title":"Flame.device.setOrientation() 和 Flame.device.setOrientations()","slug":"flame-device-setorientation-和-flame-device-setorientations","link":"#flame-device-setorientation-和-flame-device-setorientations","children":[]}]},{"level":2,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":2,"title":"时间缩放","slug":"时间缩放","link":"#时间缩放","children":[]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[{"level":3,"title":"Canvas","slug":"canvas","link":"#canvas","children":[]},{"level":3,"title":"颜色","slug":"颜色","link":"#颜色","children":[]},{"level":3,"title":"图像","slug":"图像","link":"#图像","children":[]},{"level":3,"title":"偏移量","slug":"偏移量","link":"#偏移量","children":[]},{"level":3,"title":"矩形","slug":"矩形","link":"#矩形","children":[]},{"level":3,"title":"math.Rectangle","slug":"math-rectangle","link":"#math-rectangle","children":[]},{"level":3,"title":"Size","slug":"size","link":"#size","children":[]},{"level":3,"title":"Vector2","slug":"vector2","link":"#vector2","children":[]},{"level":3,"title":"Matrix4","slug":"matrix4","link":"#matrix4","children":[]}]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/other/util.chatgpt.md"}');export{i as comp,d as data};
