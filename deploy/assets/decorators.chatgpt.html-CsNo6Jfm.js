import{_ as n,c as s,f as e,o as t}from"./app-B8TszOv9.js";const o={};function c(r,a){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="装饰器-decorators" tabindex="-1"><a class="header-anchor" href="#装饰器-decorators"><span>装饰器（Decorators）</span></a></h1><p><strong>装饰器</strong> 是一些类，它们可以封装特定的视觉效果，并将这些效果应用于一系列的画布绘制操作。装饰器不是 [Component]，但它们可以手动或通过 [HasDecorator] mixin 应用于组件。同样，装饰器也不是 [Effect]，但它们可以用来实现某些 <code>Effect</code>。</p><p>Flame 提供了一些内置的装饰器，如果需要也可以很容易地添加自定义装饰器。我们计划在 Flutter 完全支持 Web 上的着色器后添加基于着色器的装饰器。</p><hr><h2 id="flame-内置装饰器" tabindex="-1"><a class="header-anchor" href="#flame-内置装饰器"><span>Flame 内置装饰器</span></a></h2><h3 id="paintdecorator-blur" tabindex="-1"><a class="header-anchor" href="#paintdecorator-blur"><span><strong>PaintDecorator.blur</strong></span></a></h3><p>此装饰器为底层组件应用高斯模糊效果。模糊程度可以在 X 和 Y 方向上有所不同，但通常情况下不会这样使用。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>可能的用途：</strong></p><ul><li>软阴影；</li><li>远处或近摄像机的“失焦”物体；</li><li>动态模糊效果；</li><li>在弹出对话框时弱化/模糊内容；</li><li>显示角色醉酒时的模糊视觉效果。</li></ul><hr><h3 id="paintdecorator-grayscale" tabindex="-1"><a class="header-anchor" href="#paintdecorator-grayscale"><span><strong>PaintDecorator.grayscale</strong></span></a></h3><p>此装饰器将底层图像转换为灰度，就像黑白照片一样。此外，可以根据需要设置图像的半透明度（<code>opacity</code>）。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">grayscale</span><span class="token punctuation">(</span>opacity<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>可能的用途：</strong></p><ul><li>应用于 NPC，将其变成石头或幽灵；</li><li>应用于场景以表示过去的记忆；</li><li>黑白照片效果。</li></ul><hr><h3 id="paintdecorator-tint" tabindex="-1"><a class="header-anchor" href="#paintdecorator-tint"><span><strong>PaintDecorator.tint</strong></span></a></h3><p>此装饰器使用指定颜色为底层图像添加色彩，就像通过有色玻璃观看一样。建议使用半透明的 <code>color</code> 以便可以看到下面图像的细节。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xAAFF0000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>可能的用途：</strong></p><ul><li>显示受到某种魔法影响的 NPC；</li><li>在阴影中的物品/角色可以被染成黑色；</li><li>将场景染成红色以表现嗜血或角色低健康值；</li><li>染成绿色以表现中毒或生病；</li><li>在夜晚将场景染成深蓝色。</li></ul><hr><h3 id="rotate3ddecorator" tabindex="-1"><a class="header-anchor" href="#rotate3ddecorator"><span><strong>Rotate3DDecorator</strong></span></a></h3><p>此装饰器为底层组件应用 3D 旋转效果。可以指定旋转角度、旋转中心点和透视变形量。</p><p>此装饰器还提供 <code>isFlipped</code> 属性，用于确定组件当前是否正面朝向用户。这对于绘制在正反面有不同外观的组件非常有用。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">Rotate3DDecorator</span><span class="token punctuation">(</span></span>
<span class="line">  center<span class="token punctuation">:</span> component<span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">  angleX<span class="token punctuation">:</span> rotationAngle<span class="token punctuation">,</span></span>
<span class="line">  perspective<span class="token punctuation">:</span> <span class="token number">0.002</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>可能的用途：</strong></p><ul><li>可翻转的卡片；</li><li>书中的页面；</li><li>应用路由之间的过渡效果；</li><li>3D 下落的粒子效果，如雪花或树叶。</li></ul><hr><h3 id="shadow3ddecorator" tabindex="-1"><a class="header-anchor" href="#shadow3ddecorator"><span><strong>Shadow3DDecorator</strong></span></a></h3><p>此装饰器在组件下方渲染阴影，就像组件是站在平面上的 3D 对象一样。此效果对于使用等距相机投影的游戏效果最佳。</p><p>可以灵活控制阴影的角度、长度、不透明度、模糊度等。有关属性的详细说明，请参阅类文档。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">Shadow3DDecorator</span><span class="token punctuation">(</span></span>
<span class="line">  base<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  angle<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.4</span><span class="token punctuation">,</span></span>
<span class="line">  xShift<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">  yScale<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line">  opacity<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  blur<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>主要用途：</strong></p><p>为组件添加地面阴影。主要局限在于阴影是平面的，不能与环境交互。例如，此装饰器无法处理投影到墙壁或其他垂直结构的阴影。</p><hr><h2 id="使用装饰器" tabindex="-1"><a class="header-anchor" href="#使用装饰器"><span>使用装饰器</span></a></h2><h3 id="hasdecorator-mixin" tabindex="-1"><a class="header-anchor" href="#hasdecorator-mixin"><span><strong>HasDecorator mixin</strong></span></a></h3><p>此 <code>Component</code> 的 mixin 添加了 <code>decorator</code> 属性，默认值为 <code>null</code>。如果将此属性设置为一个实际的 <code>Decorator</code> 对象，那么装饰器将在组件渲染期间应用其视觉效果。要移除此效果，只需将 <code>decorator</code> 属性重新设置为 <code>null</code>。</p><hr><h3 id="positioncomponent" tabindex="-1"><a class="header-anchor" href="#positioncomponent"><span><strong>PositionComponent</strong></span></a></h3><p><code>PositionComponent</code>（及其派生类）已经拥有 <code>decorator</code> 属性，因此这些组件不需要 <code>HasDecorator</code> mixin。</p><p>实际上，<code>PositionComponent</code> 使用其装饰器来正确定位组件。因此，您想要为 <code>PositionComponent</code> 应用的新装饰器需要被链接（参见下文的 <a href="#multiple-decorators">多个装饰器</a> 部分）。</p><p>也可以替换 <code>PositionComponent</code> 的根装饰器，以创建组件在屏幕上定位的替代逻辑。</p><hr><h3 id="多个装饰器" tabindex="-1"><a class="header-anchor" href="#多个装饰器"><span><strong>多个装饰器</strong></span></a></h3><p>可以同时将多个装饰器应用于同一组件：<code>Decorator</code> 类支持链接。如果组件上已有装饰器且想要添加另一个装饰器，可以调用 <code>component.decorator.addLast(newDecorator)</code>，这会将新装饰器添加到现有链的末尾。稍后可以通过调用 <code>removeLast()</code> 删除该装饰器。</p><p>装饰器可以通过这种方式链接。例如，如果 <code>A</code> 是初始装饰器，那么 <code>A.addLast(B)</code> 后可以继续 <code>A.addLast(C)</code> 或 <code>B.addLast(C)</code> -- 两种情况下都会创建 <code>A -&gt; B -&gt; C</code> 的链条。这意味着整个链条可以通过其根进行操作，通常是 <code>component.decorator</code>。</p>`,49)]))}const l=n(o,[["render",c],["__file","decorators.chatgpt.html.vue"]]),p=JSON.parse('{"path":"/guide/flame/rendering/decorators.chatgpt.html","title":"装饰器（Decorators）","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Flame 内置装饰器","slug":"flame-内置装饰器","link":"#flame-内置装饰器","children":[{"level":3,"title":"PaintDecorator.blur","slug":"paintdecorator-blur","link":"#paintdecorator-blur","children":[]},{"level":3,"title":"PaintDecorator.grayscale","slug":"paintdecorator-grayscale","link":"#paintdecorator-grayscale","children":[]},{"level":3,"title":"PaintDecorator.tint","slug":"paintdecorator-tint","link":"#paintdecorator-tint","children":[]},{"level":3,"title":"Rotate3DDecorator","slug":"rotate3ddecorator","link":"#rotate3ddecorator","children":[]},{"level":3,"title":"Shadow3DDecorator","slug":"shadow3ddecorator","link":"#shadow3ddecorator","children":[]}]},{"level":2,"title":"使用装饰器","slug":"使用装饰器","link":"#使用装饰器","children":[{"level":3,"title":"HasDecorator mixin","slug":"hasdecorator-mixin","link":"#hasdecorator-mixin","children":[]},{"level":3,"title":"PositionComponent","slug":"positioncomponent","link":"#positioncomponent","children":[]},{"level":3,"title":"多个装饰器","slug":"多个装饰器","link":"#多个装饰器","children":[]}]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/rendering/decorators.chatgpt.md"}');export{l as comp,p as data};
