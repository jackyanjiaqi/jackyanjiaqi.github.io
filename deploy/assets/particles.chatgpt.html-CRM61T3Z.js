import{_ as s,c as a,f as e,o as p}from"./app-B8TszOv9.js";const t={};function c(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="粒子" tabindex="-1"><a class="header-anchor" href="#粒子"><span>粒子</span></a></h1><p>Flame 提供了一个基础但强大且可扩展的粒子系统。这个系统的核心概念是 <code>Particle</code> 类，它在行为上与 <code>ParticleSystemComponent</code> 类似。</p><p>在 <code>FlameGame</code> 中使用 <code>Particle</code> 的最基本方法如下所示：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token comment">// 将 Particle 包装在 ParticleSystemComponent 中</span></span>
<span class="line">  <span class="token comment">// 该组件将生命周期钩子映射到 Particle 上</span></span>
<span class="line">  <span class="token comment">// 并嵌入了一个触发器来移除该组件。</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在自定义的 <code>Game</code> 实现中使用 <code>Particle</code> 时，请确保在每个游戏循环的 tick 中调用 <code>update</code> 和 <code>render</code> 方法。</p><p>实现期望粒子效果的主要方法：</p><ul><li>组合现有行为。</li><li>使用行为链式调用（即第一种方法的语法糖）。</li><li>使用 <code>ComputedParticle</code>。</li></ul><p>组合方法与 Flutter 小部件的组合类似，从上到下定义效果。链式调用则允许通过从下到上定义行为来更流畅地表达相同的组合树。<code>ComputedParticle</code> 完全将行为的实现委托给代码。任何一种方法都可以与现有的行为结合使用。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Random</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Vector2</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">200</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 组合方式</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// 将粒子效果定义为一组从上到下嵌套的行为，彼此包含：</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// ParticleSystemComponent</span></span>
<span class="line"><span class="token comment">//   &gt; ComposedParticle</span></span>
<span class="line"><span class="token comment">//     &gt; AcceleratedParticle</span></span>
<span class="line"><span class="token comment">//       &gt; CircleParticle</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">      count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">      generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">AcceleratedParticle</span><span class="token punctuation">(</span></span>
<span class="line">        acceleration<span class="token punctuation">:</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">          paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 链式调用方式</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// 表达与上面相同的行为，但使用更流畅的 API。</span></span>
<span class="line"><span class="token comment">// 仅支持混合了 SingleChildParticle 的粒子作为链式行为。</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">      count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">      generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name"><span class="token namespace">pt<span class="token punctuation">.</span></span>CircleParticle</span><span class="token punctuation">(</span>paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 计算粒子方式</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// 所有行为都由代码显式定义。相比内置行为，提供更大的灵活性。</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">      particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">        count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token class-name">Vector2</span> position <span class="token operator">=</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token class-name">Vector2</span> speed <span class="token operator">=</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">final</span> acceleration <span class="token operator">=</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">final</span> paint <span class="token operator">=</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          <span class="token keyword">return</span> <span class="token class-name">ComputedParticle</span><span class="token punctuation">(</span></span>
<span class="line">            renderer<span class="token punctuation">:</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              speed <span class="token operator">+=</span> acceleration<span class="token punctuation">;</span></span>
<span class="line">              position <span class="token operator">+=</span> speed<span class="token punctuation">;</span></span>
<span class="line">              canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token class-name">Offset</span><span class="token punctuation">(</span>position<span class="token punctuation">.</span>x<span class="token punctuation">,</span> position<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看更多 <a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/rendering/particles_example.dart" target="_blank" rel="noopener noreferrer">如何以各种组合使用内置粒子的示例</a>。</p><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h2><p>所有 <code>Particle</code> 的一个共通行为是它们都接受一个 <code>lifespan</code> 参数。这个值用于让 <code>ParticleSystemComponent</code> 在其内部 <code>Particle</code> 的生命周期结束时自动移除自己。<code>Particle</code> 内部的时间是通过 Flame 的 <code>Timer</code> 类进行跟踪的。你可以通过将一个 <code>double</code>（以秒为单位，精确到微秒）传入相应的 <code>Particle</code> 构造函数来配置。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 活动 200 毫秒。</span></span>
<span class="line"><span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 活动 4 秒。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以通过 <code>setLifespan</code> 方法重置 <code>Particle</code> 的生命周期，该方法也接受一个 <code>double</code> 类型的秒数。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> particle <span class="token operator">=</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ... 一段时间后</span></span>
<span class="line">particle<span class="token punctuation">.</span><span class="token function">setLifespan</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 会再活动 2 秒。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在其生命周期内，<code>Particle</code> 会跟踪它的生存时间，并通过 <code>progress</code> getter 提供该信息，返回的值介于 <code>0.0</code> 和 <code>1.0</code> 之间。这个值可以类似于 Flutter 中 <code>AnimationController</code> 类的 <code>value</code> 属性使用。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> particle <span class="token operator">=</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span>particle<span class="token punctuation">:</span> particle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 将打印从 0 到 1 的值，步长为 .1：0, 0.1, 0.2 ... 0.9, 1.0。</span></span>
<span class="line"><span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">periodic</span><span class="token punctuation">(</span>duration <span class="token operator">*</span> <span class="token number">.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span>particle<span class="token punctuation">.</span>progress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>lifespan</code> 会传递给所有支持嵌套行为的 <code>Particle</code> 的后代。</p><h2 id="内置粒子" tabindex="-1"><a class="header-anchor" href="#内置粒子"><span>内置粒子</span></a></h2><p>Flame 提供了几种内置的 <code>Particle</code> 行为：</p><ul><li><code>TranslatedParticle</code>：将其 <code>child</code> 按给定的 <code>Vector2</code> 进行平移</li><li><code>MovingParticle</code>：将其 <code>child</code> 从一个预定义的 <code>Vector2</code> 移动到另一个，支持 <code>Curve</code></li><li><code>AcceleratedParticle</code>：允许基本的物理效果，如重力或速度衰减</li><li><code>CircleParticle</code>：绘制各种形状和大小的圆</li><li><code>SpriteParticle</code>：在粒子效果中绘制 Flame <code>Sprite</code></li><li><code>ImageParticle</code>：在粒子效果中绘制 <em>dart:ui</em> <code>Image</code></li><li><code>ComponentParticle</code>：在粒子效果中绘制 Flame <code>Component</code></li><li><code>FlareParticle</code>：在粒子效果中绘制 Flare 动画</li></ul><p>查看更多 <a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/rendering/particles_example.dart" target="_blank" rel="noopener noreferrer">如何将内置粒子行为结合使用的示例</a>。所有实现都可以在 <a href="https://github.com/flame-engine/flame/tree/main/packages/flame/lib/src/particles" target="_blank" rel="noopener noreferrer">Flame 仓库中的粒子文件夹</a> 中找到。</p><h2 id="translatedparticle" tabindex="-1"><a class="header-anchor" href="#translatedparticle"><span>TranslatedParticle</span></a></h2><p>简单地将底层 <code>Particle</code> 平移到渲染 <code>Canvas</code> 中指定的 <code>Vector2</code> 位置。不会改变或调整其位置。如果需要位置变化，请使用 <code>MovingParticle</code> 或 <code>AcceleratedParticle</code>。相同的效果可以通过平移 <code>Canvas</code> 层来实现。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">TranslatedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// 将子粒子效果平移到游戏画布的中心。</span></span>
<span class="line">      offset<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="movingparticle" tabindex="-1"><a class="header-anchor" href="#movingparticle"><span>MovingParticle</span></a></h2><p>在 <code>from</code> 和 <code>to</code> 两个 <code>Vector2</code> 之间移动其子 <code>Particle</code>，并在其生命周期内进行平滑过渡。支持通过 <code>CurvedParticle</code> 使用 <code>Curve</code>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">MovingParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// 将从游戏画布的一个角落移动到另一个角落。</span></span>
<span class="line">      from<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      to<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size<span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="acceleratedparticle" tabindex="-1"><a class="header-anchor" href="#acceleratedparticle"><span>AcceleratedParticle</span></a></h2><p>一个基础的物理粒子，允许你指定其初始的 <code>position</code>、<code>speed</code> 和 <code>acceleration</code>，并让 <code>update</code> 循环处理剩下的部分。所有三个参数都是 <code>Vector2</code> 类型，可以看作是向量。它尤其适用于基于物理的“爆发”效果，但不限于此。<code>Vector2</code> 值的单位是 <em>逻辑像素/秒</em>。例如，<code>Vector2(0, 100)</code> 的速度表示每秒移动 100 个逻辑像素。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Vector2</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">AcceleratedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// 从游戏画布中心发射</span></span>
<span class="line">      position<span class="token punctuation">:</span> game<span class="token punctuation">.</span>canvasSize<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// 随机初始速度，范围为 Vector2(-100..100, 0..-100)</span></span>
<span class="line">      speed<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">200</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">-</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// 向下加速，模拟“重力”</span></span>
<span class="line">      <span class="token comment">// speed: Vector2(0, 100),</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="circleparticle" tabindex="-1"><a class="header-anchor" href="#circleparticle"><span>CircleParticle</span></a></h2><p>一个渲染圆形的 <code>Particle</code>，使用给定的 <code>Paint</code>，并在传入的 <code>Canvas</code> 的零偏移处绘制。可以与 <code>TranslatedParticle</code>、<code>MovingParticle</code> 或 <code>AcceleratedParticle</code> 一起使用，以便实现所需的定位效果。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">      radius<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">withOpacity</span><span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spriteparticle" tabindex="-1"><a class="header-anchor" href="#spriteparticle"><span>SpriteParticle</span></a></h2><p>允许你将 <code>Sprite</code>嵌入到粒子效果中。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">SpriteParticle</span><span class="token punctuation">(</span></span>
<span class="line">      sprite<span class="token punctuation">:</span> <span class="token class-name">Sprite</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;sprite.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="imageparticle" tabindex="-1"><a class="header-anchor" href="#imageparticle"><span>ImageParticle</span></a></h2><p>在粒子树中渲染给定的 <code>dart:ui</code> 图像。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token comment">// 游戏初始化时</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">loadAll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string-literal"><span class="token string">&#39;image.png&#39;</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 游戏循环中的某个地方</span></span>
<span class="line"><span class="token keyword">final</span> image <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;image.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ImageParticle</span><span class="token punctuation">(</span></span>
<span class="line">      size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      image<span class="token punctuation">:</span> image<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scalingparticle" tabindex="-1"><a class="header-anchor" href="#scalingparticle"><span>ScalingParticle</span></a></h2><p>在其生命周期内，将子 <code>Particle</code> 的大小从 1 变换到指定的 <code>to</code> 值。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ScalingParticle</span><span class="token punctuation">(</span></span>
<span class="line">      lifespan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      to<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      curve<span class="token punctuation">:</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spriteanimationparticle" tabindex="-1"><a class="header-anchor" href="#spriteanimationparticle"><span>SpriteAnimationParticle</span></a></h2><p>一个嵌入了 <code>SpriteAnimation</code> 的 <code>Particle</code>。默认情况下，会自动调整 <code>SpriteAnimation</code> 的 <code>stepTime</code>，以便在粒子生命周期内完全播放完动画。也可以通过 <code>alignAnimationTime</code> 参数来覆盖这一行为。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> spriteSheet <span class="token operator">=</span> <span class="token class-name">SpriteSheet</span><span class="token punctuation">(</span></span>
<span class="line">  image<span class="token punctuation">:</span> yourSpriteSheetImage<span class="token punctuation">,</span></span>
<span class="line">  srcSize<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">SpriteAnimationParticle</span><span class="token punctuation">(</span></span>
<span class="line">      animation<span class="token punctuation">:</span> spriteSheet<span class="token punctuation">.</span><span class="token function">createAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> stepTime<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="componentparticle" tabindex="-1"><a class="header-anchor" href="#componentparticle"><span>ComponentParticle</span></a></h2><p>这个 <code>Particle</code> 允许你将一个 <code>Component</code> 嵌入到粒子效果中。<code>Component</code> 可以有自己的 <code>update</code> 生命周期，并且可以在不同的效果树中复用。如果你只需要为某个 <code>Component</code> 实例添加一些动态效果，请考虑直接将其添加到 <code>game</code> 中，而不是通过 <code>Particle</code> 中介。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> longLivingRect <span class="token operator">=</span> <span class="token class-name">RectComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ComponentParticle</span><span class="token punctuation">(</span></span>
<span class="line">      component<span class="token punctuation">:</span> longLivingRect</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">RectComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    c<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token class-name">Rect</span><span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span>center<span class="token punctuation">:</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/// 由父级 [Particle] 调用</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="computedparticle" tabindex="-1"><a class="header-anchor" href="#computedparticle"><span>ComputedParticle</span></a></h2><p>当以下情况发生时，<code>ComputedParticle</code> 会很有帮助：</p><ul><li>默认行为不够用</li><li>复杂效果优化</li><li>自定义缓动（easing）</li></ul><p>创建时，它将所有渲染工作委托给提供的 <code>ParticleRenderDelegate</code>，该委托在每帧中被调用，以执行必要的计算并将内容渲染到 <code>Canvas</code>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token comment">// 渲染一个逐渐改变颜色和大小的圆形</span></span>
<span class="line">    <span class="token comment">// 在粒子的生命周期内。</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ComputedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      renderer<span class="token punctuation">:</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> particle<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span></span>
<span class="line">        particle<span class="token punctuation">.</span>progress <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span></span>
<span class="line">            particle<span class="token punctuation">.</span>progress<span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="嵌套行为" tabindex="-1"><a class="header-anchor" href="#嵌套行为"><span>嵌套行为</span></a></h2><p>Flame 对粒子的实现遵循类似于 Flutter 小部件的极致组合模式。通过将小的行为单元封装在每个粒子中，并将这些行为单元嵌套在一起，就能实现所需的视觉效果。</p><p>允许粒子相互嵌套的两个实体是：<code>SingleChildParticle</code> 混合类和 <code>ComposedParticle</code> 类。</p><p><code>SingleChildParticle</code> 可以帮助你创建具有自定义行为的 <code>Particle</code>。例如，每帧随机定位其子粒子：</p><p><code>SingleChildParticle</code> 允许你创建具有自定义行为的 <code>Particle</code>。例如，每帧随机定位其子粒子：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">var</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">GlitchParticle</span> <span class="token keyword">extends</span> <span class="token class-name">Particle</span> <span class="token keyword">with</span> <span class="token class-name">SingleChildParticle</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Particle</span> child<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">GlitchParticle</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    required <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span>lifespan<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 也会渲染子粒子</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ComposedParticle</code> 可以单独使用，也可以嵌套在现有的粒子树中。</p>`,61)]))}const o=s(t,[["render",c],["__file","particles.chatgpt.html.vue"]]),u=JSON.parse('{"path":"/guide/flame/rendering/particles.chatgpt.html","title":"粒子","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[]},{"level":2,"title":"内置粒子","slug":"内置粒子","link":"#内置粒子","children":[]},{"level":2,"title":"TranslatedParticle","slug":"translatedparticle","link":"#translatedparticle","children":[]},{"level":2,"title":"MovingParticle","slug":"movingparticle","link":"#movingparticle","children":[]},{"level":2,"title":"AcceleratedParticle","slug":"acceleratedparticle","link":"#acceleratedparticle","children":[]},{"level":2,"title":"CircleParticle","slug":"circleparticle","link":"#circleparticle","children":[]},{"level":2,"title":"SpriteParticle","slug":"spriteparticle","link":"#spriteparticle","children":[]},{"level":2,"title":"ImageParticle","slug":"imageparticle","link":"#imageparticle","children":[]},{"level":2,"title":"ScalingParticle","slug":"scalingparticle","link":"#scalingparticle","children":[]},{"level":2,"title":"SpriteAnimationParticle","slug":"spriteanimationparticle","link":"#spriteanimationparticle","children":[]},{"level":2,"title":"ComponentParticle","slug":"componentparticle","link":"#componentparticle","children":[]},{"level":2,"title":"ComputedParticle","slug":"computedparticle","link":"#computedparticle","children":[]},{"level":2,"title":"嵌套行为","slug":"嵌套行为","link":"#嵌套行为","children":[]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/rendering/particles.chatgpt.md"}');export{o as comp,u as data};
