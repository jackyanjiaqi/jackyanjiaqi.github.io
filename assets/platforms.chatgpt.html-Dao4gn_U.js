import{_ as a,c as s,f as n,o as t}from"./app-BZlJFCNj.js";const l={};function i(c,e){return t(),s("div",null,e[0]||(e[0]=[n(`<h1 id="支持的平台" tabindex="-1"><a class="header-anchor" href="#支持的平台"><span>支持的平台</span></a></h1><p>由于 Flame 运行在 Flutter 之上，因此其支持的平台取决于 Flutter 支持的平台。</p><p>目前，Flame 支持 Web、移动端（Android 和 iOS）和桌面端（Windows、MacOS 和 Linux）。</p><h2 id="flutter-渠道" tabindex="-1"><a class="header-anchor" href="#flutter-渠道"><span>Flutter 渠道</span></a></h2><p>Flame 保持对稳定通道的支持。开发（dev）、测试（beta）和主分支（master）通道应该也能正常工作，但我们不对这些通道提供支持。这意味着，发生在稳定通道之外的问题不会被优先处理。</p><h2 id="flame-web" tabindex="-1"><a class="header-anchor" href="#flame-web"><span>Flame Web</span></a></h2><p>要在 Web 上使用 Flame，你需要确保你的游戏使用了 CanvasKit/<a href="https://skia.org/" target="_blank" rel="noopener noreferrer">Skia</a> 渲染器。这将提高 Web 上的性能，因为它会使用 <code>canvas</code> 元素，而不是单独的 DOM 元素。</p><p>要使用 Skia 运行你的游戏，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">flutter run <span class="token parameter variable">-d</span> chrome --web-renderer canvaskit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要构建生产版本的游戏，使用 Skia 渲染器，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">flutter build web <span class="token parameter variable">--release</span> --web-renderer canvaskit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="将游戏部署到-github-pages" tabindex="-1"><a class="header-anchor" href="#将游戏部署到-github-pages"><span>将游戏部署到 GitHub Pages</span></a></h2><p>将游戏在线部署的一个简单方法是使用 <a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">GitHub Pages</a>。这是 GitHub 提供的一个很棒的功能，可以让你轻松地从仓库中托管 Web 内容。</p><p>下面我们将解释如何使用 GitHub Pages 部署你的游戏。</p><p>首先，创建一个用于存放已部署文件的分支：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> gh-pages</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个分支可以从 <code>main</code> 或其他任何分支创建，都无所谓。推送该分支后，返回到 <code>main</code> 分支。</p><p>接下来，你需要将 <a href="https://github.com/bluefireteam/flutter-gh-pages" target="_blank" rel="noopener noreferrer">flutter-gh-pages</a> Action 添加到你的仓库中，可以通过在 <code>.github/workflows</code> 文件夹中创建一个 <code>gh-pages.yaml</code> 文件来完成。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> Gh<span class="token punctuation">-</span>Pages</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">push</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> main <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">build</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest</span>
<span class="line"></span>
<span class="line">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> subosito/flutter<span class="token punctuation">-</span>action@v2</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> bluefireteam/flutter<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v8</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">baseHref</span><span class="token punctuation">:</span> /NAME_OF_YOUR_REPOSITORY/</span>
<span class="line">          <span class="token key atrule">webRenderer</span><span class="token punctuation">:</span> canvaskit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>确保将 <code>NAME_OF_YOUR_REPOSITORY</code> 替换为你 GitHub 仓库的名称。</p><p>现在，每当你推送内容到 <code>main</code> 分支时，这个 Action 会自动运行并更新你已部署的游戏。</p><p>你的游戏应该可以通过如下的 URL 访问： <code>https://YOUR_GITHUB_USERNAME.github.io/NAME_OF_YOUR_REPOSITORY/</code></p><h2 id="将游戏部署到-itch-io" tabindex="-1"><a class="header-anchor" href="#将游戏部署到-itch-io"><span>将游戏部署到 itch.io</span></a></h2><ol><li>创建一个 Web 构建，可以通过 IDE 或运行 <code>flutter build web</code> 来创建 （如果提示缺少 <code>index.html</code>，可以运行 <code>flutter create . --platforms=web</code>）</li><li>打开 <code>index.html</code> 文件，删除 <code>&lt;base href=&quot;/&quot;&gt;</code> 这一行</li><li>将 <code>build/web</code> 文件夹压缩并上传到 itch.io</li></ol><p><strong>记住，这里应该是你项目的 <code>build/web</code> 目录，而不是项目根目录中的 <code>web</code> 目录！</strong></p><p>如果你是提交游戏到一个游戏开发大赛（game jam），记得将其设置为公开，并在大赛页面提交（许多人会搞错这一步）。</p><p>更多的说明可以在 <a href="https://itch.io/docs/creators/html5#getting-started/zip-file" target="_blank" rel="noopener noreferrer">itch.io</a> 找到。</p><h3 id="web-支持" tabindex="-1"><a class="header-anchor" href="#web-支持"><span>Web 支持</span></a></h3><p>在 Web 上使用 Flame 时，某些方法可能无法正常工作。例如，<code>Flame.device.setOrientation</code> 和 <code>Flame.device.fullScreen</code> 在 Web 上无法使用，它们可以被调用，但没有任何效果。</p><p>另一个例子是：使用 <code>flame_audio</code> 包进行音频预缓存也无法在 Web 上正常工作，因为 Audioplayers 在 Web 上不支持该功能。可以通过使用 <code>http</code> 包来解决这个问题，向音频文件发起一个 GET 请求，这样浏览器就会缓存该文件，达到和移动端相同的效果。</p><p>如果你想在 Web 上创建 <code>ui.Image</code> 实例，可以使用我们的 <code>Flame.images.decodeImageFromPixels</code> 方法。它包装了 <code>ui</code> 库中的 <code>decodeImageFromPixels</code> 方法，并且支持 Web 平台。如果 <code>runAsWeb</code> 参数设置为 <code>true</code>（默认值是 <code>kIsWeb</code>），它将使用内部的图像解码方法解码图像。如果 <code>runAsWeb</code> 为 <code>false</code>，则会使用 <code>decodeImageFromPixels</code>，但目前该方法在 Web 上不支持。</p>`,31)]))}const o=a(l,[["render",i],["__file","platforms.chatgpt.html.vue"]]),r=JSON.parse('{"path":"/guide/flame/platforms.chatgpt.html","title":"支持的平台","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Flutter 渠道","slug":"flutter-渠道","link":"#flutter-渠道","children":[]},{"level":2,"title":"Flame Web","slug":"flame-web","link":"#flame-web","children":[]},{"level":2,"title":"将游戏部署到 GitHub Pages","slug":"将游戏部署到-github-pages","link":"#将游戏部署到-github-pages","children":[]},{"level":2,"title":"将游戏部署到 itch.io","slug":"将游戏部署到-itch-io","link":"#将游戏部署到-itch-io","children":[{"level":3,"title":"Web 支持","slug":"web-支持","link":"#web-支持","children":[]}]}],"git":{"updatedTime":1735588798000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/platforms.chatgpt.md"}');export{o as comp,r as data};
