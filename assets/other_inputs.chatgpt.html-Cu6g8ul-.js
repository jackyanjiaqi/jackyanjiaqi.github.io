import{_ as o,c,a as s,d as t,e as p,b as a,f as l,r as i,o as u}from"./app-BZlJFCNj.js";const d={};function r(k,n){const e=i("RouteLink");return u(),c("div",null,[n[4]||(n[4]=s("h1",{id:"其他输入与辅助工具",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#其他输入与辅助工具"},[s("span",null,"其他输入与辅助工具")])],-1)),n[5]||(n[5]=s("p",null,"本文档涵盖键盘和鼠标以外的输入方法。",-1)),n[6]||(n[6]=s("p",null,"有关其他输入的文档，请参见：",-1)),s("ul",null,[s("li",null,[t(e,{to:"/guide/flame/inputs/gesture_input.html"},{default:p(()=>n[0]||(n[0]=[a("手势输入")])),_:1}),n[1]||(n[1]=a("：鼠标和触控手势"))]),s("li",null,[t(e,{to:"/guide/flame/inputs/keyboard_input.html"},{default:p(()=>n[2]||(n[2]=[a("键盘输入")])),_:1}),n[3]||(n[3]=a("：按键输入"))])]),n[7]||(n[7]=l(`<h2 id="虚拟摇杆-joystick" tabindex="-1"><a class="header-anchor" href="#虚拟摇杆-joystick"><span>虚拟摇杆 (Joystick)</span></a></h2><p>Flame 提供了一个组件，可以为游戏创建虚拟摇杆。<br> 要使用此功能，需要创建一个 <code>JoystickComponent</code>，根据需求进行配置，然后将其添加到游戏中。</p><p>以下示例可以帮助您更好地理解：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> image <span class="token operator">=</span> <span class="token keyword">await</span> images<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;joystick.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> sheet <span class="token operator">=</span> <span class="token class-name">SpriteSheet</span><span class="token punctuation">.</span><span class="token function">fromColumnsAndRows</span><span class="token punctuation">(</span></span>
<span class="line">      image<span class="token punctuation">:</span> image<span class="token punctuation">,</span></span>
<span class="line">      columns<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span></span>
<span class="line">      rows<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> joystick <span class="token operator">=</span> <span class="token class-name">JoystickComponent</span><span class="token punctuation">(</span></span>
<span class="line">      knob<span class="token punctuation">:</span> <span class="token class-name">SpriteComponent</span><span class="token punctuation">(</span></span>
<span class="line">        sprite<span class="token punctuation">:</span> sheet<span class="token punctuation">.</span><span class="token function">getSpriteById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      background<span class="token punctuation">:</span> <span class="token class-name">SpriteComponent</span><span class="token punctuation">(</span></span>
<span class="line">        sprite<span class="token punctuation">:</span> sheet<span class="token punctuation">.</span><span class="token function">getSpriteById</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      margin<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">final</span> player <span class="token operator">=</span> <span class="token class-name">Player</span><span class="token punctuation">(</span>joystick<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>joystick<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token keyword">extends</span> <span class="token class-name">SpriteComponent</span> <span class="token keyword">with</span> <span class="token class-name">HasGameRef</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>joystick<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span></span>
<span class="line">        anchor<span class="token punctuation">:</span> <span class="token class-name">Anchor</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">        size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/// 每秒移动像素数</span></span>
<span class="line">  double maxSpeed <span class="token operator">=</span> <span class="token number">300.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">JoystickComponent</span> joystick<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">    sprite <span class="token operator">=</span> <span class="token keyword">await</span> gameRef<span class="token punctuation">.</span><span class="token function">loadSprite</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;layers/player.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    position <span class="token operator">=</span> gameRef<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>joystick<span class="token punctuation">.</span>direction <span class="token operator">!=</span> <span class="token class-name">JoystickDirection</span><span class="token punctuation">.</span>idle<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      position<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>joystick<span class="token punctuation">.</span>relativeDelta  <span class="token operator">*</span> maxSpeed <span class="token operator">*</span> dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      angle <span class="token operator">=</span> joystick<span class="token punctuation">.</span>delta<span class="token punctuation">.</span><span class="token function">screenAngle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，我们创建了 <code>MyGame</code> 和 <code>Player</code> 类。<br><code>MyGame</code> 创建了一个摇杆，并在创建 <code>Player</code> 时将其传递给该类。<br> 在 <code>Player</code> 类中，根据摇杆的当前状态来执行操作。</p><p>摇杆的状态可以通过以下字段获取：</p><ul><li><code>intensity</code>：表示摇杆被从中心拖动到边缘的百分比 <code>[0.0, 1.0]</code>（或 <code>knobRadius</code> 的范围）。</li><li><code>delta</code>：摇杆从中心被拖动的绝对距离（<code>Vector2</code> 表示）。</li><li><code>relativeDelta</code>：摇杆相对于基点被拖动的百分比（<code>Vector2</code> 表示方向和距离）。</li></ul><p>如果需要为摇杆添加按钮，可以参考<br><a href="#hudbuttoncomponent"><code>HudButtonComponent</code></a>。</p><p>完整代码实现请参阅<br><a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/input/joystick_example.dart" target="_blank" rel="noopener noreferrer">Joystick 示例</a>。<br> 或者查看 <a href="https://examples.flame-engine.org/#/Input_Joystick" target="_blank" rel="noopener noreferrer">摇杆演示</a>，<br> 以了解摇杆输入在游戏中的实时应用。</p><p>如果需要挑战，可以尝试<br><a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/input/joystick_advanced_example.dart" target="_blank" rel="noopener noreferrer">高级摇杆示例</a>。<br> 相关功能的实时演示请见<br><a href="https://examples.flame-engine.org/#/Input_Joystick_Advanced" target="_blank" rel="noopener noreferrer">高级摇杆演示</a>。</p><h2 id="hudbuttoncomponent" tabindex="-1"><a class="header-anchor" href="#hudbuttoncomponent"><span>HudButtonComponent</span></a></h2><p><code>HudButtonComponent</code> 是一个按钮，可以根据与视图边缘的边距定义位置，而不是直接设置具体坐标。<br> 它需要两个 <code>PositionComponent</code>：<code>button</code> 和 <code>buttonDown</code>。<br><code>button</code> 表示按钮的默认状态，<code>buttonDown</code> 表示按钮按下时的状态。<br> 如果不需要改变按钮按下时的外观，可以省略 <code>buttonDown</code>。</p><p>默认情况下，该按钮属于 HUD（即使游戏摄像机移动，按钮也始终固定在屏幕上）。<br> 如果希望按钮不固定，可以将 <code>hudButtonComponent.respectCamera</code> 设置为 <code>true</code>。</p><p>要对按钮按下和释放的操作进行响应，可以通过 <code>onPressed</code> 和 <code>onReleased</code> 参数传递回调函数，<br> 或者扩展组件并重写 <code>onTapDown</code>、<code>onTapUp</code> 和/或 <code>onTapCancel</code> 来实现逻辑。</p><h2 id="spritebuttoncomponent" tabindex="-1"><a class="header-anchor" href="#spritebuttoncomponent"><span>SpriteButtonComponent</span></a></h2><p><code>SpriteButtonComponent</code> 是通过两个 <code>Sprite</code> 定义的按钮：<br> 一个表示按钮未按下时的状态，另一个表示按钮按下时的状态。</p><h2 id="buttoncomponent" tabindex="-1"><a class="header-anchor" href="#buttoncomponent"><span>ButtonComponent</span></a></h2><p><code>ButtonComponent</code> 是通过两个 <code>PositionComponent</code> 定义的按钮：<br> 一个表示按钮未按下时的状态，另一个表示按钮按下时的状态。<br> 如果只想用精灵（<code>Sprite</code>）定义按钮，可以使用 <a href="#spritebuttoncomponent"><code>SpriteButtonComponent</code></a>。<br> 但如果需要例如使用 <code>SpriteAnimationComponent</code> 或其他非纯精灵元素，可以使用此组件。</p><h2 id="外部手柄-gamepad" tabindex="-1"><a class="header-anchor" href="#外部手柄-gamepad"><span>外部手柄 (Gamepad)</span></a></h2><p>Flame 提供了支持外部游戏控制器（如手柄）的专用插件。<br> 详细信息请参阅 <a href="https://github.com/flame-engine/gamepad" target="_blank" rel="noopener noreferrer">Gamepads 仓库</a>。</p><h2 id="advancedbuttoncomponent" tabindex="-1"><a class="header-anchor" href="#advancedbuttoncomponent"><span>AdvancedButtonComponent</span></a></h2><p><code>AdvancedButtonComponent</code> 针对不同的指针状态提供了单独的外观。<br> 每种外观由一个 <code>PositionComponent</code> 表示，以下字段可用于自定义外观：</p><ul><li><code>defaultSkin</code>：按钮的默认外观。</li><li><code>downSkin</code>：按钮被点击或触摸时的外观。</li><li><code>hoverSkin</code>：按钮被悬停时的外观（适用于桌面和 Web）。</li><li><code>defaultLabel</code>：显示在皮肤上的文本或组件，默认居中对齐。</li><li><code>disabledSkin</code>：按钮被禁用时的外观。</li><li><code>disabledLabel</code>：按钮被禁用时显示在皮肤上的文本或组件。</li></ul><h2 id="togglebuttoncomponent" tabindex="-1"><a class="header-anchor" href="#togglebuttoncomponent"><span>ToggleButtonComponent</span></a></h2><p><code>ToggleButtonComponent</code> 是一个扩展自 <code>AdvancedButtonComponent</code> 的组件，<br> 可以在选中和未选中之间切换状态。</p><p>在现有外观的基础上，<code>ToggleButtonComponent</code> 还包含以下外观：</p><ul><li><code>defaultSelectedSkin</code>：按钮选中时的默认外观。</li><li><code>downAndSelectedSkin</code>：按钮被选中并按下时的外观。</li><li><code>hoverAndSelectedSkin</code>：按钮选中并悬停时的外观（适用于桌面和 Web）。</li><li><code>disabledAndSelectedSkin</code>：按钮选中且被禁用时的外观。</li><li><code>defaultSelectedLabel</code>：按钮选中时显示在皮肤上的文本或组件。</li></ul><h2 id="ignoreevents-mixin" tabindex="-1"><a class="header-anchor" href="#ignoreevents-mixin"><span>IgnoreEvents Mixin</span></a></h2><p>如果希望某个组件子树不接收事件，可以使用 <code>IgnoreEvents</code> mixin。<br> 添加该 mixin 后，将 <code>ignoreEvents</code> 设置为 <code>true</code>（默认值）即可屏蔽事件。<br> 需要重新接收事件时，将其设置为 <code>false</code>。</p><p>这可以用于优化，因为当前所有事件都会遍历整个组件树。</p>`,30))])}const b=o(d,[["render",r],["__file","other_inputs.chatgpt.html.vue"]]),v=JSON.parse('{"path":"/guide/flame/inputs/other_inputs.chatgpt.html","title":"其他输入与辅助工具","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"虚拟摇杆 (Joystick)","slug":"虚拟摇杆-joystick","link":"#虚拟摇杆-joystick","children":[]},{"level":2,"title":"HudButtonComponent","slug":"hudbuttoncomponent","link":"#hudbuttoncomponent","children":[]},{"level":2,"title":"SpriteButtonComponent","slug":"spritebuttoncomponent","link":"#spritebuttoncomponent","children":[]},{"level":2,"title":"ButtonComponent","slug":"buttoncomponent","link":"#buttoncomponent","children":[]},{"level":2,"title":"外部手柄 (Gamepad)","slug":"外部手柄-gamepad","link":"#外部手柄-gamepad","children":[]},{"level":2,"title":"AdvancedButtonComponent","slug":"advancedbuttoncomponent","link":"#advancedbuttoncomponent","children":[]},{"level":2,"title":"ToggleButtonComponent","slug":"togglebuttoncomponent","link":"#togglebuttoncomponent","children":[]},{"level":2,"title":"IgnoreEvents Mixin","slug":"ignoreevents-mixin","link":"#ignoreevents-mixin","children":[]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/inputs/other_inputs.chatgpt.md"}');export{b as comp,v as data};
