import{_ as a,c as s,f as e,o as t}from"./app-BZlJFCNj.js";const p={};function o(c,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="aligncomponent" tabindex="-1"><a class="header-anchor" href="#aligncomponent"><span>AlignComponent</span></a></h1><blockquote><p>类 <code>AlignComponent</code> 继承自 <code>PositionComponent</code></p></blockquote><p><code>AlignComponent</code> 是一个布局组件，用于通过相对位置将其子组件放置在自身内部。它类似于 Flutter 的 <code>Align</code> 小部件。</p><p>该组件需要一个子组件，子组件将成为该组件对齐的目标。当然，也可以向该组件添加其他子组件，但只有初始子组件会被对齐。</p><p><code>alignment</code> 参数描述了子组件在当前组件中的位置。例如，如果 <code>alignment</code> 为 <code>Anchor.center</code>，则子组件将居中显示。</p><p>通常情况下，组件的大小将与其父组件的大小匹配。然而，如果提供了 <code>widthFactor</code> 或 <code>heightFactor</code> 属性，则该方向上的组件大小将等于子组件的大小乘以相应的因子。例如，如果将 <code>heightFactor</code> 设置为 1，则该组件的宽度将与父组件相同，但高度将与子组件的高度匹配。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">AlignComponent</span><span class="token punctuation">(</span></span>
<span class="line">  child<span class="token punctuation">:</span> <span class="token class-name">TextComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;hello&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  alignment<span class="token punctuation">:</span> <span class="token class-name">Anchor</span><span class="token punctuation">.</span>centerLeft<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，子组件的锚点将与 <code>alignment</code> 值相同。这实现了传统的对齐行为：例如，子组件的中心将被放置在当前组件的中心，或者子组件的右下角可以放置在组件的右下角。然而，也可以通过为子组件设置不同的锚点并将 <code>keepChildAnchor</code> 设置为 <code>true</code> 来实现更复杂的布局。例如，如果将 <code>alignment</code> 设置为 <code>topCenter</code>，并将子组件的锚点设置为 <code>bottomCenter</code>，则子组件将被放置在当前组件的上方：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">PlayerSprite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">AlignComponent</span><span class="token punctuation">(</span></span>
<span class="line">    child<span class="token punctuation">:</span> <span class="token class-name">HealthBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>anchor <span class="token operator">=</span> <span class="token class-name">Anchor</span><span class="token punctuation">.</span>bottomCenter<span class="token punctuation">,</span></span>
<span class="line">    alignment<span class="token punctuation">:</span> <span class="token class-name">Anchor</span><span class="token punctuation">.</span>topCenter<span class="token punctuation">,</span></span>
<span class="line">    keepChildAnchor<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">AlignComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">PositionComponent</span><span class="token operator">?</span> child<span class="token punctuation">,</span> </span>
<span class="line">  <span class="token class-name">Anchor</span> alignment <span class="token operator">=</span> <span class="token class-name">Anchor</span><span class="token punctuation">.</span>topLeft<span class="token punctuation">,</span> </span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>widthFactor<span class="token punctuation">,</span> </span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>heightFactor<span class="token punctuation">,</span> </span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>keepChildAnchor <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建一个组件，使其子组件根据对齐方式在该组件的边界框内定位。</p><p>更准确地说，子组件将被放置在当前组件的边界框内相对位置处，子组件的锚点也将被设置为对齐方式，除非 <code>keepChildAnchor</code> 参数为 <code>true</code>。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><ul><li><p><strong>child ←→ PositionComponent?</strong><br> 需要由该组件定位的子组件。子组件将自动挂载到当前组件。</p></li><li><p><strong>alignment ←→ Anchor</strong><br> 子组件在当前组件中的对齐方式。</p><p>注意：与 Flutter 的 <code>Alignment</code> 不同，组件的左上角相对坐标为 (0, 0)，右下角的坐标为 (1, 1)。</p></li><li><p><strong>widthFactor : double?</strong><br> 如果为 <code>null</code>，则组件的宽度将与父组件的宽度相同。否则，宽度将等于子组件的宽度乘以此因子。</p></li><li><p><strong>heightFactor : double?</strong><br> 如果为 <code>null</code>，则组件的高度将与父组件的高度相同。否则，高度将等于子组件的高度乘以此因子。</p></li><li><p><strong>keepChildAnchor : bool</strong><br> 如果为 <code>false</code>（默认值），则子组件的锚点将与对齐值相同。如果为 <code>true</code>，则允许子组件拥有独立于父组件的锚点值。</p></li></ul>`,15)]))}const i=a(p,[["render",o],["__file","align_component.chatgpt.html.vue"]]),d=JSON.parse('{"path":"/guide/flame/layout/align_component.chatgpt.html","title":"AlignComponent","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/layout/align_component.chatgpt.md"}');export{i as comp,d as data};
