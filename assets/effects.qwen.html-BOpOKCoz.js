import{_ as a,c as s,f as e,o as t}from"./app-BZlJFCNj.js";const c={};function l(p,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="效果" tabindex="-1"><a class="header-anchor" href="#效果"><span>效果</span></a></h1><p>效果是一种特殊的组件，可以附加到另一个组件上以修改其属性或外观。</p><p>例如，假设你正在制作一个带有收集型增益物品的游戏。你想让这些增益物品在地图的随机位置生成，并在一段时间后消失。显然，你可以为增益物品创建一个精灵组件并将其放置在地图上，但我们还可以做得更好！</p><p>让我们添加一个 <code>ScaleEffect</code>，当增益物品首次出现时，使其从 0% 增长到 100%。再添加另一个无限重复的交替 <code>MoveEffect</code>，以使物品轻微上下移动。然后添加一个 <code>OpacityEffect</code>，让物品闪烁三次，这个效果自带 30 秒的延迟（或你希望增益物品保持在原地的时间）。最后，添加一个 <code>RemoveEffect</code>，它会在指定时间后自动从游戏树中移除该物品（你可能希望在其 <code>OpacityEffect</code> 结束后立即触发）。</p><p>正如你所看到的，通过一些简单的效果，我们将一个简单的无生命的精灵转换成一个更加有趣的物品。更重要的是，这并没有导致代码复杂性增加：一旦添加了效果，它们将自动运行，并在完成后从游戏树中自行移除。</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p><code>Effect</code> 的功能是在一段时间内改变某个组件的属性值。为了实现这一点，<code>Effect</code> 必须知道该属性的初始值、最终值以及随着时间的变化方式。初始值通常由效果自动确定，最终值则由用户显式提供，时间变化则由 <code>EffectController</code> 处理。</p><p>Flame 提供了多种效果，并且你还可以<a href="#creating-new-effects">创建自己的效果</a>。以下是一些包含的效果：</p><ul><li><a href="#movebyeffect"><code>MoveByEffect</code></a></li><li><a href="#movetoeffect"><code>MoveToEffect</code></a></li><li><a href="#movealongpatheffect"><code>MoveAlongPathEffect</code></a></li><li><a href="#rotateeffectby"><code>RotateEffect.by</code></a></li><li><a href="#rotateeffectto"><code>RotateEffect.to</code></a></li><li><a href="#scaleeffectby"><code>ScaleEffect.by</code></a></li><li><a href="#scaleeffectto"><code>ScaleEffect.to</code></a></li><li><a href="#sizeeffectby"><code>SizeEffect.by</code></a></li><li><a href="#sizetoffectto"><code>SizeEffect.to</code></a></li><li><a href="#anchorbyeffect"><code>AnchorByEffect</code></a></li><li><a href="#anchortoeffect"><code>AnchorToEffect</code></a></li><li><a href="#opacitytoeffect"><code>OpacityToEffect</code></a></li><li><a href="#opacitybyeffect"><code>OpacityByEffect</code></a></li><li><a href="#coloreffect"><code>ColorEffect</code></a></li><li><a href="#sequenceeffect"><code>SequenceEffect</code></a></li><li><a href="#removeeffect"><code>RemoveEffect</code></a></li></ul><p><code>EffectController</code> 是一个描述效果如何随着时间演变的对象。如果你将效果的初始值视为 0% 的进度，最终值视为 100% 的进度，那么 <code>EffectController</code> 的作用就是将“物理”时间（以秒为单位测量）映射到从 0 到 1 的“逻辑”时间。</p><p>Flame 框架还提供了多种效果控制器：</p><ul><li><a href="#effectcontroller"><code>EffectController</code></a></li><li><a href="#lineareffectcontroller"><code>LinearEffectController</code></a></li><li><a href="#reverselineareffectcontroller"><code>ReverseLinearEffectController</code></a></li><li><a href="#curvedeffectcontroller"><code>CurvedEffectController</code></a></li><li><a href="#reversecurvedeffectcontroller"><code>ReverseCurvedEffectController</code></a></li><li><a href="#pauseeffectcontroller"><code>PauseEffectController</code></a></li><li><a href="#repeatedeffectcontroller"><code>RepeatedEffectController</code></a></li><li><a href="#infiniteeffectcontroller"><code>InfiniteEffectController</code></a></li><li><a href="#sequenceeffectcontroller"><code>SequenceEffectController</code></a></li><li><a href="#speedeffectcontroller"><code>SpeedEffectController</code></a></li><li><a href="#delayedeffectcontroller"><code>DelayedEffectController</code></a></li><li><a href="#noiseeffectcontroller"><code>NoiseEffectController</code></a></li><li><a href="#randomeffectcontroller"><code>RandomEffectController</code></a></li><li><a href="#sineeffectcontroller"><code>SineEffectController</code></a></li><li><a href="#zigzageffectcontroller"><code>ZigzagEffectController</code></a></li></ul><h2 id="内置效果" tabindex="-1"><a class="header-anchor" href="#内置效果"><span>内置效果</span></a></h2><h3 id="effect" tabindex="-1"><a class="header-anchor" href="#effect"><span><code>Effect</code></span></a></h3><p>基础的 <code>Effect</code> 类本身无法单独使用（它是抽象的），但它为所有其他效果提供了通用功能。这包括：</p><ul><li>使用 <code>effect.pause()</code> 和 <code>effect.resume()</code> 方法暂停/恢复效果。你可以通过 <code>effect.isPaused</code> 检查效果是否当前处于暂停状态。</li><li>属性 <code>removeOnFinish</code> （默认值为 true）将在效果完成后使效果组件从游戏树中移除并进行垃圾回收。如果你计划在完成效果后重用该效果，请将其设置为 false。</li><li>可选的用户提供的 <code>onComplete</code>，当效果执行完毕但尚未从游戏中移除时将被调用。</li><li>一个 <code>completed</code> future，在效果完成后完成。</li><li>方法 <code>reset()</code> 将效果恢复到其原始状态，使其可以再次运行。</li></ul><h3 id="movebyeffect" tabindex="-1"><a class="header-anchor" href="#movebyeffect"><span><code>MoveByEffect</code></span></a></h3><p>此效果应用于 <code>PositionComponent</code> 并按照指定的 <code>offset</code> 偏移量进行移动。该偏移量相对于目标组件当前位置：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">MoveByEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果组件当前位于 <code>Vector2(250, 200)</code>，则在效果结束后其位置将为 <code>Vector2(250, 190)</code>。</p><p>可以在同一组件上同时应用多个移动效果。结果将是所有个别效果的叠加。</p><h3 id="movetoeffect" tabindex="-1"><a class="header-anchor" href="#movetoeffect"><span><code>MoveToEffect</code></span></a></h3><p>此效果使 <code>PositionComponent</code> 从当前位置直线移动到指定的目标点。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">MoveToEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以将此类效果附加到同一组件上，但这不推荐。</p><h3 id="movealongpatheffect" tabindex="-1"><a class="header-anchor" href="#movealongpatheffect"><span><code>MoveAlongPathEffect</code></span></a></h3><p>此效果使 <code>PositionComponent</code> 沿着相对于组件当前位置的指定路径移动。该路径可以具有非线性段，但必须是单连通的。建议从 <code>Vector2.zero()</code> 开始路径以避免组件位置出现突然跳跃。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">MoveAlongPathEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">quadraticBezierTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可选标志 <code>absolute: true</code> 将效果中的路径声明为绝对。也就是说，目标将在开始时“跳”到路径的起点，然后像画布上绘制的曲线一样遵循该路径。</p><p>另一个标志 <code>oriented: true</code> 指示目标不仅沿曲线移动，还要在每个点旋转自身以匹配曲线的方向。使用此标志，效果同时兼具移动和旋转的效果。</p><h3 id="rotateeffect-by" tabindex="-1"><a class="header-anchor" href="#rotateeffect-by"><span><code>RotateEffect.by</code></span></a></h3><p>相对于当前方向顺时针旋转目标指定的角度。角度以弧度为单位。例如，以下效果将目标顺时针旋转 90º（=<a href="https://en.wikipedia.org/wiki/Tau_(mathematical_constant)" target="_blank" rel="noopener noreferrer">tau</a>/4 弧度）：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">RotateEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">  tau<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rotateeffect-to" tabindex="-1"><a class="header-anchor" href="#rotateeffect-to"><span><code>RotateEffect.to</code></span></a></h3><p>顺时针旋转目标到指定的角度。例如，以下效果将目标旋转至向东方向（0º 是北方，90º=<a href="https://en.wikipedia.org/wiki/Tau_(mathematical_constant)" target="_blank" rel="noopener noreferrer">tau</a>/4 东方，180º=tau/2 南方，而 270º=tau*3/4 西方）：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">RotateEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">  tau<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaleeffect-by" tabindex="-1"><a class="header-anchor" href="#scaleeffect-by"><span><code>ScaleEffect.by</code></span></a></h3><p>此效果将目标的缩放量按指定数量进行更改。例如，这会使组件放大 50%：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">ScaleEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scaleeffect-to" tabindex="-1"><a class="header-anchor" href="#scaleeffect-to"><span><code>ScaleEffect.to</code></span></a></h3><p>此效果类似于 <code>ScaleEffect.by</code>，但它设置目标缩放量的绝对值。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">ScaleEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sizeeffect-by" tabindex="-1"><a class="header-anchor" href="#sizeeffect-by"><span><code>SizeEffect.by</code></span></a></h3><p>此效果将根据其当前大小更改目标组件的尺寸。例如，如果目标具有尺寸 <code>Vector2(100, 100)</code>，则在应用并完成以下效果后，新尺寸将是 <code>Vector2(120, 50)</code>：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">SizeEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">   <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>PositionComponent</code> 的尺寸不能为负数。如果某个效果尝试将尺寸设置为负值，则尺寸将被固定在零。</p><p>请注意，要使此效果生效，目标组件必须实现 <code>SizeProvider</code> 接口并在渲染时考虑其 <code>size</code>。内置的少数组件实现了此 API，但你可以通过向类声明添加 <code>implements SizeEffect</code> 使自己的组件与大小效果兼容。</p><p><code>SizeEffect</code> 的另一种选择是 <code>ScaleEffect</code>，它更通用且同时缩放目标组件及其子组件。</p><h3 id="sizeeffect-to" tabindex="-1"><a class="header-anchor" href="#sizeeffect-to"><span><code>SizeEffect.to</code></span></a></h3><p>将目标组件的尺寸更改为指定尺寸。目标尺寸不能为负数：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">SizeEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="anchorbyeffect" tabindex="-1"><a class="header-anchor" href="#anchorbyeffect"><span><code>AnchorByEffect</code></span></a></h3><p>按指定偏移量更改目标锚点的位置。此效果也可以通过 <code>AnchorEffect.by()</code> 创建。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">AnchorByEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>speed<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="anchortoeffect" tabindex="-1"><a class="header-anchor" href="#anchortoeffect"><span><code>AnchorToEffect</code></span></a></h3><p>更改目标锚点的位置。此效果也可以通过 <code>AnchorEffect.to()</code> 创建。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">AnchorToEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">Anchor</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>speed<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="opacitytoeffect" tabindex="-1"><a class="header-anchor" href="#opacitytoeffect"><span><code>OpacityToEffect</code></span></a></h3><p>此效果将随着时间改变目标的透明度至指定的 alpha 值。仅可应用于实现 <code>OpacityProvider</code> 的组件。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">OpacityEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token number">0.2</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果组件使用多个画笔，可以通过 <code>target</code> 参数针对一个或多个这些画笔。<code>HasPaint</code> 混合实现了 <code>OpacityProvider</code> 并暴露了轻松创建所需 paintIds 提供程序的 API。对于单个 paintId 可以使用 <code>opacityProviderOf</code>，对于多个 paintIds 可以使用 <code>opacityProviderOfList</code>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">OpacityEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token number">0.2</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  target<span class="token punctuation">:</span> component<span class="token punctuation">.</span><span class="token function">opacityProviderOfList</span><span class="token punctuation">(</span></span>
<span class="line">    paintIds<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token punctuation">[</span>paintId1<span class="token punctuation">,</span> paintId2<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>透明度值为 0 对应完全透明的组件，而透明度值为 1 则是完全不透明。便捷构造函数 <code>OpacityEffect.fadeOut()</code> 和 <code>OpacityEffect.fadeIn()</code> 将分别使目标动画化至全透明/全可见状态。</p><h3 id="opacitybyeffect" tabindex="-1"><a class="header-anchor" href="#opacitybyeffect"><span><code>OpacityByEffect</code></span></a></h3><p>此效果将根据指定的 alpha 值相对地改变目标的透明度。例如，以下效果将把目标的透明度改变 90%：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">OpacityEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token number">0.9</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前，此效果仅可应用于具有 <code>HasPaint</code> 混合的组件。如果目标组件使用多个画笔，可以通过 <code>paintId</code> 参数针对任何单个颜色。</p><h3 id="gloweffect" tabindex="-1"><a class="header-anchor" href="#gloweffect"><span>GlowEffect</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">此效果当前处于实验阶段，其 API 可能会在未来更改。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此效果将根据指定的 <code>glow-strength</code> 周围应用发光阴影。阴影的颜色为目标组件的画笔颜色。例如，以下效果将以强度 10 应用发光阴影：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">GlowEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token number">10.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前此效果仅可应用于具有 <code>HasPaint</code> 混合的组件。</p><h3 id="sequenceeffect" tabindex="-1"><a class="header-anchor" href="#sequenceeffect"><span><code>SequenceEffect</code></span></a></h3><p>该效果可用于顺序运行多个其他效果。构成的效果可以有不同的类型。</p><p>序列效果也可以是交替的（首先正向运行，然后反向运行）；并且还可以重复特定次数或无限次。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">SequenceEffect</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">  <span class="token class-name">ScaleEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">EffectController</span><span class="token punctuation">(</span></span>
<span class="line">      duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span></span>
<span class="line">      alternate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">MoveEffect</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">EffectController</span><span class="token punctuation">(</span></span>
<span class="line">      duration<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">OpacityEffect</span><span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">EffectController</span><span class="token punctuation">(</span></span>
<span class="line">      duration<span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">RemoveEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removeeffect" tabindex="-1"><a class="header-anchor" href="#removeeffect"><span><code>RemoveEffect</code></span></a></h3><p>这是一个简单的效果，可附加到一个组件上，使其在指定延迟后从游戏树中移除：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">RemoveEffect</span><span class="token punctuation">(</span>delay<span class="token punctuation">:</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="coloreffect" tabindex="-1"><a class="header-anchor" href="#coloreffect"><span>ColorEffect</span></a></h2><p>此效果将更改画笔的基础颜色，使渲染的组件被提供的颜色在给定范围内着色。</p><p>使用示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> effect <span class="token operator">=</span> <span class="token class-name">ColorEffect</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF00FF00</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">EffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  opacityFrom<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span></span>
<span class="line">  opacityTo<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>opacityFrom</code> 和 <code>opacityTo</code> 参数将确定应用到组件的颜色“多少”。在此示例中，效果将以 20% 开始并增加到 80%。</p><p><strong>注意：</strong> 由于此效果的实现方式以及 Flutter 的 <code>ColorFilter</code> 类的工作原理，在组件上添加多个 <code>ColorEffect</code> 时，仅最后一个会生效。</p><h2 id="创建新的效果" tabindex="-1"><a class="header-anchor" href="#创建新的效果"><span>创建新的效果</span></a></h2><p>尽管 Flame 提供了广泛内置的效果，但最终你可能会发现它们不足。幸运的是，创建新效果非常简单。</p><p>每个效果都扩展自基础的 <code>Effect</code> 类，可能是通过一个或多个更专门的抽象子类（如 <code>ComponentEffect&lt;T&gt;</code> 或 <code>Transform2DEffect</code>）。</p><p><code>Effect</code> 类的构造函数需要一个 <code>EffectController</code> 实例作为参数。在大多数情况下，你可能希望从自己的构造函数中传递该控制器。幸运的是，效果控制器封装了效果实现的大部分复杂性，因此你不需要担心重新创建该功能。</p><p>最后，你需要实现一个单一的方法 <code>apply(double progress)</code>，该方法将在效果处于活动状态时每次更新调用。在这个方法中，你应该对效果的目标做出更改。</p><p>此外，如果需要在效果开始或结束时执行某些操作，你可能希望实现回调 <code>onStart()</code> 和 <code>onFinish()</code>。</p><p>当实现 <code>apply()</code> 方法时，我们建议仅使用相对更新。也就是说，通过增量/减量当前值来改变目标属性，而不是直接将该属性设置为固定值。这样多个效果就可以在同一组件上作用而不会相互干扰。</p><h2 id="效果控制器" tabindex="-1"><a class="header-anchor" href="#效果控制器"><span>效果控制器</span></a></h2><h3 id="effectcontroller" tabindex="-1"><a class="header-anchor" href="#effectcontroller"><span><code>EffectController</code></span></a></h3><p>基础的 <code>EffectController</code> 类提供了一个工厂构造函数，能够创建多种常见的控制器。构造函数的语法如下：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">EffectController</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    required double duration<span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Curve</span> curve <span class="token operator">=</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>linear<span class="token punctuation">,</span></span>
<span class="line">    double<span class="token operator">?</span> reverseDuration<span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Curve</span><span class="token operator">?</span> reverseCurve<span class="token punctuation">,</span></span>
<span class="line">    bool alternate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    double atMaxDuration <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">    double atMinDuration <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">    int<span class="token operator">?</span> repeatCount<span class="token punctuation">,</span></span>
<span class="line">    bool infinite <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    double startDelay <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">VoidCallback</span><span class="token operator">?</span> onMax<span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">VoidCallback</span><span class="token operator">?</span> onMin<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><em><code>duration</code></em> -- 效果主要部分的长度，即从 0 到 100% 所需的时间。此参数不能为负数，但可以为零。如果仅指定了此参数，则效果将在 <code>duration</code> 秒内线性增长。</p></li><li><p><em><code>curve</code></em> -- 如果给出，则创建一个非线性效果，根据提供的 <a href="https://api.flutter.dev/flutter/animation/Curves-class.html" target="_blank" rel="noopener noreferrer">曲线</a> 从 0 到 100% 增长。</p></li><li><p><em><code>reverseDuration</code></em> -- 如果提供，则添加控制器的附加步骤：在 <code>duration</code> 秒内从 0 增长到 100%，之后再从 100% 返回到 0 持续 <code>reverseDuration</code> 秒。此外，效果将在进度级别为 0 时完成（通常情况下，效果在进度 1 处完成）。</p></li><li><p><em><code>reverseCurve</code></em> -- 效果的“反向”步骤使用的曲线。如果未提供，默认为 <code>curve.flipped</code>。</p></li><li><p><em><code>alternate</code></em> -- 设置为 true 等同于将 <code>reverseDuration</code> 设置为与 <code>duration</code> 相等。如果已设置 <code>reverseDuration</code>，则此标志无效。</p></li><li><p><em><code>atMaxDuration</code></em> -- 如果非零，则在效果达到最大进度后插入一个暂停，在反向阶段之前保持 100% 进度的时间。如果没有反向阶段，则这只是一个暂停，然后将效果标记为已完成。</p></li><li><p><em><code>atMinDuration</code></em> -- 如果非零，则在达到最低进度（0）时的反向阶段结束处插入一个暂停，期间效果进度为 0%。如果没有反向阶段，则无论是否存在“at-max”暂停，该暂停将在“at-max”暂停后或前进阶段之后插入。此外，效果现在将在进度级别 0 处完成。</p></li><li><p><em><code>repeatCount</code></em> -- 如果大于一，将导致效果按照指定次数重复自身。每次迭代将包括前进阶段、最大暂停、反向阶段，然后是最低暂停（跳过未指定的阶段）。</p></li><li><p><em><code>infinite</code></em> -- 如果为 true，则效果将无限次重复且永远不会完成，这相当于将 <code>repeatCount</code> 设置为无穷大。</p></li><li><p><em><code>startDelay</code></em> -- 在效果开始前插入的附加等待时间。即使效果在重复，此等待时间也仅执行一次。在此期间，<code>.started</code> 属性返回 false。效果的 <code>onStart()</code> 回调将在等待期结束后执行。</p><p>使用此参数是创建按顺序（或重叠）执行的效果链最简单的方法。</p></li><li><p><em><code>onMax</code></em> -- 在达到最大进度后、可选暂停和反向阶段之前将被调用的回调函数。</p></li><li><p><em><code>onMin</code></em> -- 在反向阶段结束时达到最低进度后、可选暂停和前进阶段之前将被调用的回调函数。</p></li></ul><p>此工厂构造函数返回的效果控制器由以下描述的一些更简单的效果控制器组合而成。如果此构造函数对你的需求来说过于有限，你可以总是从相同的构建块中创建自己的组合。</p><p>除了工厂构造函数外，<code>EffectController</code> 类定义了所有效果控制器通用的一系列属性。这些属性包括：</p><ul><li><p><code>.started</code> -- 如果效果已开始，则为 true。对于大多数效果控制器，该属性始终为 true。唯一例外是 <code>DelayedEffectController</code>，它在效果处于等待阶段时返回 false。</p></li><li><p><code>.completed</code> -- 当效果控制器完成执行时变为 true。</p></li><li><p><code>.progress</code> -- 效果控制器的当前值，0 到 1 的浮点数。此变量是效果控制器的主要“输出”值。</p></li><li><p><code>.duration</code> -- 效果的总持续时间，或如果无法确定持续时间（例如，如果持续时间为随机或无限）则为 null。</p></li></ul><h3 id="lineareffectcontroller" tabindex="-1"><a class="header-anchor" href="#lineareffectcontroller"><span><code>LinearEffectController</code></span></a></h3><p>这是最简单的效果控制器，在指定的 <code>duration</code> 内从 0 线性增长到 1：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="reverselineareffectcontroller" tabindex="-1"><a class="header-anchor" href="#reverselineareffectcontroller"><span><code>ReverseLinearEffectController</code></span></a></h3><p>类似于 <code>LinearEffectController</code>，但它反向进行并在线性时间内从 1 增长到 0：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">ReverseLinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="curvedeffectcontroller" tabindex="-1"><a class="header-anchor" href="#curvedeffectcontroller"><span><code>CurvedEffectController</code></span></a></h3><p>此效果控制器根据指定的 <code>duration</code> 和提供的 <code>curve</code> 非线性地从 0 增长到 1：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">CurvedEffectController</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>easeOut<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="reversecurvedeffectcontroller" tabindex="-1"><a class="header-anchor" href="#reversecurvedeffectcontroller"><span><code>ReverseCurvedEffectController</code></span></a></h3><p>类似于 <code>CurvedEffectController</code>，但控制器根据提供的 <code>curve</code> 从 1 减少到 0：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">ReverseCurvedEffectController</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>bounceInOut<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="pauseeffectcontroller" tabindex="-1"><a class="header-anchor" href="#pauseeffectcontroller"><span><code>PauseEffectController</code></span></a></h3><p>此效果控制器将进度保持在指定的时间持续时间内恒定值。通常，<code>progress</code> 将为 0 或 1：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">PauseEffectController</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> progress<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="repeatedeffectcontroller" tabindex="-1"><a class="header-anchor" href="#repeatedeffectcontroller"><span><code>RepeatedEffectController</code></span></a></h3><p>这是一个复合效果控制器。它采用另一个效果控制器作为子组件，并多次重复它，在每次下一个周期开始之前重置。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">RepeatedEffectController</span><span class="token punctuation">(</span><span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>子效果控制器不能是无限的。如果子组件是随机的，则将在每次迭代时使用新的随机值重新初始化。</p><h3 id="infiniteeffectcontroller" tabindex="-1"><a class="header-anchor" href="#infiniteeffectcontroller"><span><code>InfiniteEffectController</code></span></a></h3><p>类似于 <code>RepeatedEffectController</code>，但无限期地重复其子控制器。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">InfiniteEffectController</span><span class="token punctuation">(</span><span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="sequenceeffectcontroller" tabindex="-1"><a class="header-anchor" href="#sequenceeffectcontroller"><span><code>SequenceEffectController</code></span></a></h3><p>按顺序执行效果控制器列表。控制器列表不能为空。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">SequenceEffectController</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">  <span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">PauseEffectController</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">ReverseLinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="speedeffectcontroller" tabindex="-1"><a class="header-anchor" href="#speedeffectcontroller"><span><code>SpeedEffectController</code></span></a></h3><p>更改其子效果控制器的持续时间，以便效果以预定义速度进行。子 EffectController 的初始持续时间无关紧要。子控制器必须是 <code>DurationEffectController</code> 的子类。</p><p><code>SpeedEffectController</code> 只能应用于定义了速度概念的效果。此类效果必须实现 <code>MeasurableEffect</code> 接口。例如，以下效果符合要求：<a href="#movebyeffect"><code>MoveByEffect</code></a>，<a href="#movetoeffect"><code>MoveToEffect</code></a>，<a href="#movealongpatheffect"><code>MoveAlongPathEffect</code></a>，<a href="#rotateeffectby"><code>RotateEffect.by</code></a>，<a href="#rotateeffectto"><code>RotateEffect.to</code></a>。</p><p>参数 <code>speed</code> 的单位为秒每单位，其中“单位”的概念取决于目标效果。例如，对于移动效果，它们指的是行进的距离；而对于旋转效果，则以弧度为单位。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec1 <span class="token operator">=</span> <span class="token class-name">SpeedEffectController</span><span class="token punctuation">(</span><span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> speed<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">final</span> ec2 <span class="token operator">=</span> <span class="token class-name">EffectController</span><span class="token punctuation">(</span>speed<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 与 ec1 相同</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delayedeffectcontroller" tabindex="-1"><a class="header-anchor" href="#delayedeffectcontroller"><span><code>DelayedEffectController</code></span></a></h3><p>在指定的 <code>delay</code> 后执行其子控制器的效果控制器。当控制器处于“延迟”阶段时，效果将被视为“未开始”，即 <code>.started</code> 属性将返回 <code>false</code>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">DelayedEffectController</span><span class="token punctuation">(</span><span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="noiseeffectcontroller" tabindex="-1"><a class="header-anchor" href="#noiseeffectcontroller"><span><code>NoiseEffectController</code></span></a></h3><p>此效果控制器表现出噪声行为，即在零周围随机振荡。此类效果控制器可用于实现各种晃动效果。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">NoiseEffectController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span> frequency<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="randomeffectcontroller" tabindex="-1"><a class="header-anchor" href="#randomeffectcontroller"><span><code>RandomEffectController</code></span></a></h3><p>此控制器包装另一个控制器并使其持续时间随机。每次重置时实际的持续时间值都会重新生成，这使得该控制器在重复上下文中特别有用，例如 <a href="#repeatedeffectcontroller">#repeatedeffectcontroller</a> 或 <a href="#infiniteeffectcontroller">#infiniteeffectcontroller</a>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">RandomEffectController</span><span class="token punctuation">.</span><span class="token function">uniform</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">LinearEffectController</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 这里的持续时间无关紧要</span></span>
<span class="line">  min<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  max<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户可以控制使用的 <code>Random</code> 源以及生成的随机持续时间的确切分布。包含两种分布——<code>.uniform</code> 和 <code>.exponential</code>，任何其他都可以由用户实现。</p><h3 id="sineeffectcontroller" tabindex="-1"><a class="header-anchor" href="#sineeffectcontroller"><span><code>SineEffectController</code></span></a></h3><p>表示正弦函数单个周期的效果控制器。用于创建自然和谐振荡效果。两个相互垂直且具有不同周期的 <code>SineEffectControllers</code> 驱动的效果将生成 <a href="https://en.wikipedia.org/wiki/Lissajous_curve" target="_blank" rel="noopener noreferrer">利萨茹曲线</a>。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">SineEffectController</span><span class="token punctuation">(</span>period<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="zigzageffectcontroller" tabindex="-1"><a class="header-anchor" href="#zigzageffectcontroller"><span><code>ZigzagEffectController</code></span></a></h3><p>简单的交替效果控制器。在一次 <code>period</code> 内，此控制器将线性地从 0 增加到 1，然后减少到 -1，并返回到 0。用于起始位置应为振荡中心而非极端（与标准交替的 <code>EffectController</code> 提供的效果不同）的振荡效果。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> ec <span class="token operator">=</span> <span class="token class-name">ZigzagEffectController</span><span class="token punctuation">(</span>period<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://examples.flame-engine.org/" target="_blank" rel="noopener noreferrer">各种效果示例</a>。</li></ul>`,148)]))}const i=a(c,[["render",l],["__file","effects.qwen.html.vue"]]),r=JSON.parse('{"path":"/guide/flame/effects.qwen.html","title":"效果","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"内置效果","slug":"内置效果","link":"#内置效果","children":[{"level":3,"title":"Effect","slug":"effect","link":"#effect","children":[]},{"level":3,"title":"MoveByEffect","slug":"movebyeffect","link":"#movebyeffect","children":[]},{"level":3,"title":"MoveToEffect","slug":"movetoeffect","link":"#movetoeffect","children":[]},{"level":3,"title":"MoveAlongPathEffect","slug":"movealongpatheffect","link":"#movealongpatheffect","children":[]},{"level":3,"title":"RotateEffect.by","slug":"rotateeffect-by","link":"#rotateeffect-by","children":[]},{"level":3,"title":"RotateEffect.to","slug":"rotateeffect-to","link":"#rotateeffect-to","children":[]},{"level":3,"title":"ScaleEffect.by","slug":"scaleeffect-by","link":"#scaleeffect-by","children":[]},{"level":3,"title":"ScaleEffect.to","slug":"scaleeffect-to","link":"#scaleeffect-to","children":[]},{"level":3,"title":"SizeEffect.by","slug":"sizeeffect-by","link":"#sizeeffect-by","children":[]},{"level":3,"title":"SizeEffect.to","slug":"sizeeffect-to","link":"#sizeeffect-to","children":[]},{"level":3,"title":"AnchorByEffect","slug":"anchorbyeffect","link":"#anchorbyeffect","children":[]},{"level":3,"title":"AnchorToEffect","slug":"anchortoeffect","link":"#anchortoeffect","children":[]},{"level":3,"title":"OpacityToEffect","slug":"opacitytoeffect","link":"#opacitytoeffect","children":[]},{"level":3,"title":"OpacityByEffect","slug":"opacitybyeffect","link":"#opacitybyeffect","children":[]},{"level":3,"title":"GlowEffect","slug":"gloweffect","link":"#gloweffect","children":[]},{"level":3,"title":"SequenceEffect","slug":"sequenceeffect","link":"#sequenceeffect","children":[]},{"level":3,"title":"RemoveEffect","slug":"removeeffect","link":"#removeeffect","children":[]}]},{"level":2,"title":"ColorEffect","slug":"coloreffect","link":"#coloreffect","children":[]},{"level":2,"title":"创建新的效果","slug":"创建新的效果","link":"#创建新的效果","children":[]},{"level":2,"title":"效果控制器","slug":"效果控制器","link":"#效果控制器","children":[{"level":3,"title":"EffectController","slug":"effectcontroller","link":"#effectcontroller","children":[]},{"level":3,"title":"LinearEffectController","slug":"lineareffectcontroller","link":"#lineareffectcontroller","children":[]},{"level":3,"title":"ReverseLinearEffectController","slug":"reverselineareffectcontroller","link":"#reverselineareffectcontroller","children":[]},{"level":3,"title":"CurvedEffectController","slug":"curvedeffectcontroller","link":"#curvedeffectcontroller","children":[]},{"level":3,"title":"ReverseCurvedEffectController","slug":"reversecurvedeffectcontroller","link":"#reversecurvedeffectcontroller","children":[]},{"level":3,"title":"PauseEffectController","slug":"pauseeffectcontroller","link":"#pauseeffectcontroller","children":[]},{"level":3,"title":"RepeatedEffectController","slug":"repeatedeffectcontroller","link":"#repeatedeffectcontroller","children":[]},{"level":3,"title":"InfiniteEffectController","slug":"infiniteeffectcontroller","link":"#infiniteeffectcontroller","children":[]},{"level":3,"title":"SequenceEffectController","slug":"sequenceeffectcontroller","link":"#sequenceeffectcontroller","children":[]},{"level":3,"title":"SpeedEffectController","slug":"speedeffectcontroller","link":"#speedeffectcontroller","children":[]},{"level":3,"title":"DelayedEffectController","slug":"delayedeffectcontroller","link":"#delayedeffectcontroller","children":[]},{"level":3,"title":"NoiseEffectController","slug":"noiseeffectcontroller","link":"#noiseeffectcontroller","children":[]},{"level":3,"title":"RandomEffectController","slug":"randomeffectcontroller","link":"#randomeffectcontroller","children":[]},{"level":3,"title":"SineEffectController","slug":"sineeffectcontroller","link":"#sineeffectcontroller","children":[]},{"level":3,"title":"ZigzagEffectController","slug":"zigzageffectcontroller","link":"#zigzageffectcontroller","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":2,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/effects.qwen.md"}');export{i as comp,r as data};
