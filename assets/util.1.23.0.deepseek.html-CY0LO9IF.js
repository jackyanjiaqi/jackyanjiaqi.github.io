import{_ as s,c as a,f as e,o as c}from"./app-BZlJFCNj.js";const t={};function l(o,n){return c(),a("div",null,n[0]||(n[0]=[e(`<h1 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类"><span>工具类</span></a></h1><p>在本页中，您可以找到一些工具类的文档。</p><h2 id="device-类" tabindex="-1"><a class="header-anchor" href="#device-类"><span>Device 类</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">此类的某些方法仅适用于移动平台（Android 和 iOS）。</span>
<span class="line"></span>
<span class="line">在其他平台上使用这些方法将不会生效，并且在调试模式下运行时会在控制台打印警告。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此类可以通过 <code>Flame.device</code> 访问，并包含一些可以用来控制设备状态的方法。例如，您可以更改屏幕方向并将应用程序设置为全屏。</p><h3 id="flame-device-fullscreen" tabindex="-1"><a class="header-anchor" href="#flame-device-fullscreen"><span><code>Flame.device.fullScreen()</code></span></a></h3><p>调用此方法会禁用所有 <code>SystemUiOverlay</code>，使应用进入全屏模式。在主方法中调用时，会使您的应用全屏（没有顶部或底部的栏）。</p><p><strong>注意：</strong> 该方法在 Web 上无效。</p><h3 id="flame-device-setlandscape" tabindex="-1"><a class="header-anchor" href="#flame-device-setlandscape"><span><code>Flame.device.setLandscape()</code></span></a></h3><p>此方法将应用程序的整体方向设置为横向，并根据操作系统和设备设置允许左横屏和右横屏两种方向。要在特定方向上设置应用方向，请使用 <code>Flame.device.setLandscapeLeftOnly</code> 或 <code>Flame.device.setLandscapeRightOnly</code>。</p><p><strong>注意：</strong> 该方法在 Web 上无效。</p><h3 id="flame-device-setportrait" tabindex="-1"><a class="header-anchor" href="#flame-device-setportrait"><span><code>Flame.device.setPortrait()</code></span></a></h3><p>此方法将应用程序的整体方向设置为纵向，并根据操作系统和设备设置允许竖屏向上和向下两种方向。要在特定方向上设置应用方向，请使用 <code>Flame.device.setPortraitUpOnly</code> 或 <code>Flame.device.setPortraitDownOnly</code>。</p><p><strong>注意：</strong> 该方法在 Web 上无效。</p><h3 id="flame-device-setorientation-和-flame-device-setorientations" tabindex="-1"><a class="header-anchor" href="#flame-device-setorientation-和-flame-device-setorientations"><span><code>Flame.device.setOrientation()</code> 和 <code>Flame.device.setOrientations()</code></span></a></h3><p>如果需要更精细的控制方向，可以使用 <code>setOrientation</code>（接受一个 <code>DeviceOrientation</code> 参数）和 <code>setOrientations</code>（接受一个 <code>List&lt;DeviceOrientation&gt;</code> 参数）。</p><p><strong>注意：</strong> 该方法在 Web 上无效。</p><h2 id="timer" tabindex="-1"><a class="header-anchor" href="#timer"><span>Timer</span></a></h2><p>Flame 提供了一个简单的工具类来处理倒计时和其他时间状态变化事件。</p><p>倒计时示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/input.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">Game</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">TextPaint</span> textPaint <span class="token operator">=</span> <span class="token class-name">TextPaint</span><span class="token punctuation">(</span></span>
<span class="line">    style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">final</span> countdown <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    countdown<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>countdown<span class="token punctuation">.</span>finished<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Prefer the timer callback, but this is better in some cases</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    textPaint<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span></span>
<span class="line">      canvas<span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-literal"><span class="token string">&quot;Countdown: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">countdown<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>间隔示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/input.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">Game</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">TextPaint</span> textPaint <span class="token operator">=</span> <span class="token class-name">TextPaint</span><span class="token punctuation">(</span></span>
<span class="line">    style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">Timer</span> interval<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  int elapsedSecs <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">MyGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    interval <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">      onTick<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> elapsedSecs <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">      repeat<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    interval<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    textPaint<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Elapsed time: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">elapsedSecs</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Timer</code> 实例也可以在 <code>FlameGame</code> 游戏中使用 <code>TimerComponent</code> 类。</p><p><code>TimerComponent</code> 示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/timer.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyFlameGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">MyFlameGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token class-name">TimerComponent</span><span class="token punctuation">(</span></span>
<span class="line">        period<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        repeat<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        onTick<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;10 seconds elapsed&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="time-scale" tabindex="-1"><a class="header-anchor" href="#time-scale"><span>Time Scale</span></a></h2><p>在许多游戏中，创建慢动作或快进效果通常是出于某些游戏事件。为了更容易实现这些效果，Flame 提供了一个 <code>HasTimeScale</code> mixin。此 mixin 可以附加到任何 Flame <code>Component</code>，并提供一个简单的 get/set API 来控制 <code>timeScale</code>。默认情况下，<code>timeScale</code> 为 <code>1</code>，表示组件的运行速度与现实时间相同。将其设置为 <code>2</code> 会使组件的速度加倍，设置为 <code>0.5</code> 会使其速度减半。此 mixin 还提供 <code>pause</code> 和 <code>resume</code> 方法，可以用来代替手动将 <code>timeScale</code> 设置为 0 和 1。</p><p>由于 <code>FlameGame</code> 也是一个 <code>Component</code>，因此也可以将其附加到 <code>FlameGame</code> 上。这样做可以从一个地方控制游戏的所有组件的时间尺度。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">HasTimeScale 无法单独控制 \`BodyComponent\` 的移动速度（来自 \`flame_forge2d\`）。它只适用于整个游戏或 Forge2DWorld 的时间缩放。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/game.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyFlameGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token keyword">with</span> <span class="token class-name">HasTimeScale</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">speedUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    timeScale <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">slowDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    timeScale <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions"><span>Extensions</span></a></h2><p>Flame 提供了一组实用的扩展方法，这些扩展旨在帮助开发人员简化快捷方式和转换方法。它们都可以从 <code>package:flame/extensions.dart</code> 导入。</p><h3 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas"><span>Canvas</span></a></h3><p>方法：</p><ul><li><code>scaleVector</code>：类似于 <code>canvas scale</code> 方法，但接受一个 <code>Vector2</code> 作为参数。</li><li><code>translateVector</code>：类似于 <code>canvas translate</code> 方法，但接受一个 <code>Vector2</code> 作为参数。</li><li><code>renderPoint</code>：在画布上渲染单个点（主要用于调试目的）。</li><li><code>renderAt</code> 和 <code>renderRotated</code>：如果您直接在 <code>Canvas</code> 上渲染，可以使用这些函数轻松操作坐标以在正确位置渲染内容。它们会改变 <code>Canvas</code> 的变换矩阵，但随后会恢复。</li></ul><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color"><span>Color</span></a></h3><p>方法：</p><ul><li><code>darken</code>：将颜色的阴影变暗一个介于 0 到 1 之间的量。</li><li><code>brighten</code>：将颜色的阴影提亮一个介于 0 到 1 之间的量。</li></ul><p>工厂：</p><ul><li><code>ColorExtension.fromRGBHexString</code>：从有效的十六进制字符串（例如，#1C1C1C）中解析 RGB 颜色。</li><li><code>ColorExtension.fromARGBHexString</code>：从有效的十六进制字符串（例如，#FF1C1C1C）中解析 ARGB 颜色。</li></ul><h3 id="image" tabindex="-1"><a class="header-anchor" href="#image"><span>Image</span></a></h3><p>方法：</p><ul><li><code>pixelsInUint8</code>：检索图像的像素数据为 <code>Uint8List</code>，以 <code>ImageByteFormat.rgba8888</code> 格式。</li><li><code>getBoundingRect</code>：获取图像的边界矩形作为 <code>Rect</code>。</li><li><code>size</code>：图像的大小作为 <code>Vector2</code>。</li><li><code>darken</code>：将图像的每个像素变暗一个介于 0 到 1 之间的量。</li><li><code>brighten</code>：将图像的每个像素提亮一个介于 0 到 1 之间的量。</li></ul><h3 id="offset" tabindex="-1"><a class="header-anchor" href="#offset"><span>Offset</span></a></h3><p>方法：</p><ul><li><code>toVector2</code>：从 <code>Offset</code> 创建 <code>Vector2</code>。</li><li><code>toSize</code>：从 <code>Offset</code> 创建 <code>Size</code>。</li><li><code>toPoint</code>：从 <code>Offset</code> 创建 <code>Point</code>。</li><li><code>toRect</code>：从 <code>Offset</code> 创建一个以 (0,0) 为原点并以该 <code>Offset</code> 为右下角的 <code>Rect</code>。</li></ul><h3 id="rect" tabindex="-1"><a class="header-anchor" href="#rect"><span>Rect</span></a></h3><p>方法：</p><ul><li><code>toOffset</code>：从 <code>Rect</code> 创建 <code>Offset</code>。</li><li><code>toVector2</code>：从 <code>Rect</code> 创建一个以 (0,0) 为原点并以 <code>Rect</code> 的大小为 <code>Vector2</code>。</li><li><code>containsPoint</code>：判断此 <code>Rect</code> 是否包含一个 <code>Vector2</code> 点。</li><li><code>intersectsSegment</code>：判断由两个 <code>Vector2</code> 形成的线段是否与此 <code>Rect</code> 相交。</li><li><code>intersectsLineSegment</code>：判断 <code>LineSegment</code> 是否与此 <code>Rect</code> 相交。</li><li><code>toVertices</code>：将此 <code>Rect</code> 的四个角转换为 <code>Vector2</code> 列表。</li><li><code>toFlameRectangle</code>：将此 <code>Rect</code> 转换为 Flame <code>Rectangle</code>。</li><li><code>toMathRectangle</code>：将此 <code>Rect</code> 转换为 <code>math.Rectangle</code>。</li><li><code>toGeometryRectangle</code>：将此 <code>Rect</code> 转换为 <code>flame-geom</code> 的 <code>Rectangle</code>。</li><li><code>transform</code>：使用 <code>Matrix4</code> 变换此 <code>Rect</code>。</li></ul><p>工厂：</p><ul><li><code>RectExtension.getBounds</code>：构造一个表示一组 <code>Vector2</code> 边界范围的 <code>Rect</code>。</li><li><code>RectExtension.fromCenter</code>：从中心点（使用 <code>Vector2</code>）构造一个 <code>Rect</code>。</li></ul><h3 id="math-rectangle" tabindex="-1"><a class="header-anchor" href="#math-rectangle"><span>math.Rectangle</span></a></h3><p>方法：</p><ul><li><code>toRect</code>：将此数学 <code>Rectangle</code> 转换为 UI <code>Rect</code>。</li></ul><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size"><span>Size</span></a></h3><p>方法：</p><ul><li><code>toVector2</code>：从 <code>Size</code> 创建 <code>Vector2</code>。</li><li><code>toOffset</code>：从 <code>Size</code> 创建 <code>Offset</code>。</li><li><code>toPoint</code>：从 <code>Size</code> 创建 <code>Point</code>。</li><li><code>toRect</code>：从 <code>Size</code> 创建一个以 (0,0) 为原点并以该 <code>Size</code> 为大小的 <code>Rect</code>。</li></ul><h3 id="vector2" tabindex="-1"><a class="header-anchor" href="#vector2"><span>Vector2</span></a></h3><p>此类来自 <code>vector_math</code> 包，我们对包中提供的内容进行了一些有用的扩展方法。</p><p>方法：</p><ul><li><code>toOffset</code>：从 <code>Vector2</code> 创建 <code>Offset</code>。</li><li><code>toPoint</code>：从 <code>Vector2</code> 创建 <code>Point</code>。</li><li><code>toRect</code>：从 <code>Vector2</code> 创建一个以 (0,0) 为原点并以该 <code>Vector2</code> 为大小的 <code>Rect</code>。</li><li><code>toPositionedRect</code>：从 <code>Vector2</code> 创建一个以 [x, y] 为原点并以该 <code>Vector2</code> 为大小的 <code>Rect</code>。</li><li><code>lerp</code>：线性插值两个 <code>Vector2</code>。</li><li><code>rotate</code>：使用指定的弧度旋转 <code>Vector2</code>，可以选择围绕定义的 <code>Vector2</code> 或中心旋转。</li><li><code>scaleTo</code>：将 <code>Vector2</code> 的长度更改为提供的 长度，而不改变方向。</li><li><code>moveToTarget</code>：平滑地将 <code>Vector2</code> 移动到目标方向指定的距离。</li></ul><p>工厂：</p><ul><li><code>Vector2Extension.fromInts</code>：创建一个具有整数输入的 <code>Vector2</code>。</li></ul><p>操作符：</p><ul><li><code>&amp;</code>：将两个 <code>Vector2</code> 组合成一个 <code>Rect</code>，原点应在左侧，大小应在右侧。</li><li><code>%</code>：分别对 x 和 y 进行 <code>Vector2</code> 取模/余数。</li></ul><h3 id="matrix4" tabindex="-1"><a class="header-anchor" href="#matrix4"><span>Matrix4</span></a></h3><p>此类来自 <code>vector_math</code> 包。我们对包中已经提供的内容进行了一些扩展方法。</p><p>方法：</p><ul><li><code>translate2</code>：通过给定的 <code>Vector2</code> 平移 <code>Matrix4</code>。</li><li><code>transform2</code>：使用 <code>Matrix4</code> 转换给定的 <code>Vector2</code>，创建一个新的 <code>Vector2</code>。</li><li><code>transformed2</code>：将输入的 <code>Vector2</code> 变换为输出 <code>Vector2</code>。</li></ul><p>获取器：</p><ul><li><code>m11</code>：第一行和第一列。</li><li><code>m12</code>：第一行和第二列。</li><li><code>m13</code>：第一行和第三列。</li><li><code>m14</code>：第一行和第四列。</li><li><code>m21</code>：第二行和第一列。</li><li><code>m22</code>：第二行和第二列。</li><li><code>m23</code>：第二行和第三列。</li><li><code>m24</code>：第二行和第四列。</li><li><code>m31</code>：第三行和第一列。</li><li><code>m32</code>：第三行和第二列。</li><li><code>m33</code>：第三行和第三列。</li><li><code>m34</code>：第三行和第四列。</li><li><code>m41</code>：第四行和第一列。</li><li><code>m42</code>：第四行和第二列。</li><li><code>m43</code>：第四行和第三列。</li><li><code>m44</code>：第四行和第四列。</li></ul><p>工厂：</p><ul><li><code>Matrix4Extension.scale</code>：通过传递一个 <code>Vector4</code> 或 <code>Vector2</code> 作为第一个参数，或者 x, y, z 双 输入来创建缩放的 <code>Matrix4</code>。</li></ul>`,75)]))}const p=s(t,[["render",l],["__file","util.1.23.0.deepseek.html.vue"]]),d=JSON.parse('{"path":"/guide/flame/other/util.1.23.0.deepseek.html","title":"工具类","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Device 类","slug":"device-类","link":"#device-类","children":[{"level":3,"title":"Flame.device.fullScreen()","slug":"flame-device-fullscreen","link":"#flame-device-fullscreen","children":[]},{"level":3,"title":"Flame.device.setLandscape()","slug":"flame-device-setlandscape","link":"#flame-device-setlandscape","children":[]},{"level":3,"title":"Flame.device.setPortrait()","slug":"flame-device-setportrait","link":"#flame-device-setportrait","children":[]},{"level":3,"title":"Flame.device.setOrientation() 和 Flame.device.setOrientations()","slug":"flame-device-setorientation-和-flame-device-setorientations","link":"#flame-device-setorientation-和-flame-device-setorientations","children":[]}]},{"level":2,"title":"Timer","slug":"timer","link":"#timer","children":[]},{"level":2,"title":"Time Scale","slug":"time-scale","link":"#time-scale","children":[]},{"level":2,"title":"Extensions","slug":"extensions","link":"#extensions","children":[{"level":3,"title":"Canvas","slug":"canvas","link":"#canvas","children":[]},{"level":3,"title":"Color","slug":"color","link":"#color","children":[]},{"level":3,"title":"Image","slug":"image","link":"#image","children":[]},{"level":3,"title":"Offset","slug":"offset","link":"#offset","children":[]},{"level":3,"title":"Rect","slug":"rect","link":"#rect","children":[]},{"level":3,"title":"math.Rectangle","slug":"math-rectangle","link":"#math-rectangle","children":[]},{"level":3,"title":"Size","slug":"size","link":"#size","children":[]},{"level":3,"title":"Vector2","slug":"vector2","link":"#vector2","children":[]},{"level":3,"title":"Matrix4","slug":"matrix4","link":"#matrix4","children":[]}]}],"git":{},"filePathRelative":"guide/flame/other/util.1.23.0.deepseek.md"}');export{p as comp,d as data};
