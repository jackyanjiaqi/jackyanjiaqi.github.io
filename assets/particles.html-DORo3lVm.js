import{_ as s,c as a,f as e,o as p}from"./app-B8TszOv9.js";const t={};function c(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="particles" tabindex="-1"><a class="header-anchor" href="#particles"><span>Particles</span></a></h1><p>Flame offers a basic, yet robust and extendable particle system. The core concept of this system is the <code>Particle</code> class, which is very similar in its behavior to the <code>ParticleSystemComponent</code>.</p><p>The most basic usage of a <code>Particle</code> with <code>FlameGame</code> would look as in the following:</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/components.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token comment">// Wrapping a Particle with ParticleSystemComponent</span></span>
<span class="line">  <span class="token comment">// which maps Component lifecycle hooks to Particle ones</span></span>
<span class="line">  <span class="token comment">// and embeds a trigger for removing the component.</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When using <code>Particle</code> with a custom <code>Game</code> implementation, please ensure that both the <code>update</code> and <code>render</code> methods are called during each game loop tick.</p><p>Main approaches to implement desired particle effects:</p><ul><li>Composition of existing behaviors.</li><li>Use behavior chaining (just a syntactic sugar of the first one).</li><li>Using <code>ComputedParticle</code>.</li></ul><p>Composition works in a similar fashion to those of Flutter widgets by defining the effect from top to bottom. Chaining allows to express the same composition trees more fluently by defining behaviors from bottom to top. Computed particles in their turn fully delegate implementation of the behavior to your code. Any of the approaches could be used in conjunction with existing behaviors where needed.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Random</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Vector2</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">200</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Composition.</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// Defining a particle effect as a set of nested behaviors from top to bottom,</span></span>
<span class="line"><span class="token comment">// one within another:</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// ParticleSystemComponent</span></span>
<span class="line"><span class="token comment">//   &gt; ComposedParticle</span></span>
<span class="line"><span class="token comment">//     &gt; AcceleratedParticle</span></span>
<span class="line"><span class="token comment">//       &gt; CircleParticle</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">      count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">      generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">AcceleratedParticle</span><span class="token punctuation">(</span></span>
<span class="line">        acceleration<span class="token punctuation">:</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">          paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Chaining.</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// Expresses the same behavior as above, but with a more fluent API.</span></span>
<span class="line"><span class="token comment">// Only Particles with SingleChildParticle mixin can be used as chainable behaviors.</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">      count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">      generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name"><span class="token namespace">pt<span class="token punctuation">.</span></span>CircleParticle</span><span class="token punctuation">(</span>paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Computed Particle.</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">// All the behaviors are defined explicitly. Offers greater flexibility</span></span>
<span class="line"><span class="token comment">// compared to built-in behaviors.</span></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">      particle<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span></span>
<span class="line">        count<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        generator<span class="token punctuation">:</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token class-name">Vector2</span> position <span class="token operator">=</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token class-name">Vector2</span> speed <span class="token operator">=</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">final</span> acceleration <span class="token operator">=</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">final</span> paint <span class="token operator">=</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          <span class="token keyword">return</span> <span class="token class-name">ComputedParticle</span><span class="token punctuation">(</span></span>
<span class="line">            renderer<span class="token punctuation">:</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              speed <span class="token operator">+=</span> acceleration<span class="token punctuation">;</span></span>
<span class="line">              position <span class="token operator">+=</span> speed<span class="token punctuation">;</span></span>
<span class="line">              canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token class-name">Offset</span><span class="token punctuation">(</span>position<span class="token punctuation">.</span>x<span class="token punctuation">,</span> position<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See more <a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/rendering/particles_example.dart" target="_blank" rel="noopener noreferrer">examples of how to use built-in particles in various combinations</a>.</p><h2 id="lifecycle" tabindex="-1"><a class="header-anchor" href="#lifecycle"><span>Lifecycle</span></a></h2><p>A behavior common to all <code>Particle</code>s is that all of them accept a <code>lifespan</code> argument. This value is used to make the <code>ParticleSystemComponent</code> remove itself once its internal <code>Particle</code> has reached the end of its life. Time within the <code>Particle</code> itself is tracked using the Flame <code>Timer</code> class. It can be configured with a <code>double</code>, represented in seconds (with microsecond precision) by passing it into the corresponding <code>Particle</code> constructor.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// will live for 200ms.</span></span>
<span class="line"><span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// will live for 4s.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>It is also possible to reset a <code>Particle</code>&#39;s lifespan by using the <code>setLifespan</code> method, which also accepts a <code>double</code> of seconds.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> particle <span class="token operator">=</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ... after some time.</span></span>
<span class="line">particle<span class="token punctuation">.</span><span class="token function">setLifespan</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// will live for another 2s.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>During its lifetime, a <code>Particle</code> tracks the time it was alive and exposes it through the <code>progress</code> getter, which returns a value between <code>0.0</code> and <code>1.0</code>. This value can be used in a similar fashion as the <code>value</code> property of the <code>AnimationController</code> class in Flutter.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> particle <span class="token operator">=</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span>lifespan<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span>particle<span class="token punctuation">:</span> particle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Will print values from 0 to 1 with step of .1: 0, 0.1, 0.2 ... 0.9, 1.0.</span></span>
<span class="line"><span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">periodic</span><span class="token punctuation">(</span>duration <span class="token operator">*</span> <span class="token number">.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span>particle<span class="token punctuation">.</span>progress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>lifespan</code> is passed down to all the descendants of a given <code>Particle</code>, if it supports any of the nesting behaviors.</p><h2 id="built-in-particles" tabindex="-1"><a class="header-anchor" href="#built-in-particles"><span>Built-in particles</span></a></h2><p>Flame ships with a few built-in <code>Particle</code> behaviors:</p><ul><li>The <code>TranslatedParticle</code> translates its <code>child</code> by given <code>Vector2</code></li><li>The <code>MovingParticle</code> moves its <code>child</code> between two predefined <code>Vector2</code>, supports <code>Curve</code></li><li>The <code>AcceleratedParticle</code> allows basic physics based effects, like gravitation or speed dampening</li><li>The <code>CircleParticle</code> renders circles of all shapes and sizes</li><li>The <code>SpriteParticle</code> renders Flame <code>Sprite</code> within a <code>Particle</code> effect</li><li>The <code>ImageParticle</code> renders <em>dart:ui</em> <code>Image</code> within a <code>Particle</code> effect</li><li>The <code>ComponentParticle</code> renders Flame <code>Component</code> within a <code>Particle</code> effect</li><li>The <code>FlareParticle</code> renders Flare animation within a <code>Particle</code> effect</li></ul><p>See more <a href="https://github.com/flame-engine/flame/blob/main/examples/lib/stories/rendering/particles_example.dart" target="_blank" rel="noopener noreferrer">examples of how to use built-in Particle behaviors together</a>. All the implementations are available in the <a href="https://github.com/flame-engine/flame/tree/main/packages/flame/lib/src/particles" target="_blank" rel="noopener noreferrer">particles folder on the Flame repository.</a></p><h2 id="translatedparticle" tabindex="-1"><a class="header-anchor" href="#translatedparticle"><span>TranslatedParticle</span></a></h2><p>Simply translates the underlying <code>Particle</code> to a specified <code>Vector2</code> within the rendering <code>Canvas</code>. Does not change or alter its position, consider using <code>MovingParticle</code> or <code>AcceleratedParticle</code> where change of position is required. Same effect could be achieved by translating the <code>Canvas</code> layer.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">TranslatedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// Will translate the child Particle effect to the center of game canvas.</span></span>
<span class="line">      offset<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">Particle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="movingparticle" tabindex="-1"><a class="header-anchor" href="#movingparticle"><span>MovingParticle</span></a></h2><p>Moves the child <code>Particle</code> between the <code>from</code> and <code>to</code> <code>Vector2</code>s during its lifespan. Supports <code>Curve</code> via <code>CurvedParticle</code>.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">MovingParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// Will move from corner to corner of the game canvas.</span></span>
<span class="line">      from<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">zero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      to<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size<span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="acceleratedparticle" tabindex="-1"><a class="header-anchor" href="#acceleratedparticle"><span>AcceleratedParticle</span></a></h2><p>A basic physics particle which allows you to specify its initial <code>position</code>, <code>speed</code> and <code>acceleration</code> and lets the <code>update</code> cycle do the rest. All three are specified as <code>Vector2</code>s, which you can think of as vectors. It works especially well for physics-based &quot;bursts&quot;, but it is not limited to that. Unit of the <code>Vector2</code> value is <em>logical px/s</em>. So a speed of <code>Vector2(0, 100)</code> will move a child <code>Particle</code> by 100 logical pixels of the device every second of game time.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Vector2</span> <span class="token function">randomVector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>rnd<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">AcceleratedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token comment">// Will fire off in the center of game canvas</span></span>
<span class="line">      position<span class="token punctuation">:</span> game<span class="token punctuation">.</span>canvasSize<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// With random initial speed of Vector2(-100..100, 0..-100)</span></span>
<span class="line">      speed<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">200</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">-</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// Accelerating downwards, simulating &quot;gravity&quot;</span></span>
<span class="line">      <span class="token comment">// speed: Vector2(0, 100),</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="circleparticle" tabindex="-1"><a class="header-anchor" href="#circleparticle"><span>CircleParticle</span></a></h2><p>A <code>Particle</code> which renders a circle with given <code>Paint</code> at the zero offset of passed <code>Canvas</code>. Use in conjunction with <code>TranslatedParticle</code>, <code>MovingParticle</code> or <code>AcceleratedParticle</code> in order to achieve desired positioning.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">      radius<span class="token punctuation">:</span> game<span class="token punctuation">.</span>size<span class="token punctuation">.</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">withOpacity</span><span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spriteparticle" tabindex="-1"><a class="header-anchor" href="#spriteparticle"><span>SpriteParticle</span></a></h2><p>Allows you to embed a <code>Sprite</code> into your particle effects.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">SpriteParticle</span><span class="token punctuation">(</span></span>
<span class="line">      sprite<span class="token punctuation">:</span> <span class="token class-name">Sprite</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;sprite.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="imageparticle" tabindex="-1"><a class="header-anchor" href="#imageparticle"><span>ImageParticle</span></a></h2><p>Renders given <code>dart:ui</code> image within the particle tree.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token comment">// During game initialization</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">loadAll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string-literal"><span class="token string">&#39;image.png&#39;</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Somewhere during the game loop</span></span>
<span class="line"><span class="token keyword">final</span> image <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;image.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ImageParticle</span><span class="token punctuation">(</span></span>
<span class="line">      size<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      image<span class="token punctuation">:</span> image<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scalingparticle" tabindex="-1"><a class="header-anchor" href="#scalingparticle"><span>ScalingParticle</span></a></h2><p>Scales the child <code>Particle</code> between <code>1</code> and <code>to</code> during its lifespan.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ScalingParticle</span><span class="token punctuation">(</span></span>
<span class="line">      lifespan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">      to<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      curve<span class="token punctuation">:</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">CircleParticle</span><span class="token punctuation">(</span></span>
<span class="line">        radius<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">        paint<span class="token punctuation">:</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spriteanimationparticle" tabindex="-1"><a class="header-anchor" href="#spriteanimationparticle"><span>SpriteAnimationParticle</span></a></h2><p>A <code>Particle</code> which embeds a <code>SpriteAnimation</code>. By default, aligns the <code>SpriteAnimation</code>&#39;s <code>stepTime</code> so that it&#39;s fully played during the <code>Particle</code> lifespan. It&#39;s possible to override this behavior with the <code>alignAnimationTime</code> argument.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> spriteSheet <span class="token operator">=</span> <span class="token class-name">SpriteSheet</span><span class="token punctuation">(</span></span>
<span class="line">  image<span class="token punctuation">:</span> yourSpriteSheetImage<span class="token punctuation">,</span></span>
<span class="line">  srcSize<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">SpriteAnimationParticle</span><span class="token punctuation">(</span></span>
<span class="line">      animation<span class="token punctuation">:</span> spriteSheet<span class="token punctuation">.</span><span class="token function">createAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> stepTime<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="componentparticle" tabindex="-1"><a class="header-anchor" href="#componentparticle"><span>ComponentParticle</span></a></h2><p>This <code>Particle</code> allows you to embed a <code>Component</code> within the particle effects. The <code>Component</code> could have its own <code>update</code> lifecycle and could be reused across different effect trees. If the only thing you need is to add some dynamics to an instance of a certain <code>Component</code>, please consider adding it to the <code>game</code> directly, without the <code>Particle</code> in the middle.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> longLivingRect <span class="token operator">=</span> <span class="token class-name">RectComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ComponentParticle</span><span class="token punctuation">(</span></span>
<span class="line">      component<span class="token punctuation">:</span> longLivingRect</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">RectComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    c<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token class-name">Rect</span><span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span>center<span class="token punctuation">:</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>double dt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/// Will be called by parent [Particle]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="computedparticle" tabindex="-1"><a class="header-anchor" href="#computedparticle"><span>ComputedParticle</span></a></h2><p>A <code>Particle</code> which could help you when:</p><ul><li>Default behavior is not enough</li><li>Complex effects optimization</li><li>Custom easings</li></ul><p>When created, it delegates all the rendering to a supplied <code>ParticleRenderDelegate</code> which is called on each frame to perform necessary computations and render something to the <code>Canvas</code>.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">game<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token class-name">ParticleSystemComponent</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token comment">// Renders a circle which gradually changes its color and size during the</span></span>
<span class="line">    <span class="token comment">// particle lifespan.</span></span>
<span class="line">    particle<span class="token punctuation">:</span> <span class="token class-name">ComputedParticle</span><span class="token punctuation">(</span></span>
<span class="line">      renderer<span class="token punctuation">:</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> particle<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span></span>
<span class="line">        particle<span class="token punctuation">.</span>progress <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span></span>
<span class="line">            particle<span class="token punctuation">.</span>progress<span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nesting-behavior" tabindex="-1"><a class="header-anchor" href="#nesting-behavior"><span>Nesting behavior</span></a></h2><p>Flame&#39;s implementation of particles follows the same pattern of extreme composition as Flutter widgets. That is achieved by encapsulating small pieces of behavior in every particle and then nesting these behaviors together to achieve the desired visual effect.</p><p>Two entities that allow <code>Particle</code>s to nest each other are: <code>SingleChildParticle</code> mixin and <code>ComposedParticle</code> class.</p><p>A <code>SingleChildParticle</code> may help you with creating <code>Particles</code> with a custom behavior. For example, randomly positioning its child during each frame:</p><p>The <code>SingleChildParticle</code> may help you with creating <code>Particles</code> with a custom behavior.</p><p>For example, randomly positioning it&#39;s child during each frame:</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">var</span> rnd <span class="token operator">=</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">GlitchParticle</span> <span class="token keyword">extends</span> <span class="token class-name">Particle</span> <span class="token keyword">with</span> <span class="token class-name">SingleChildParticle</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Particle</span> child<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">GlitchParticle</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    required <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span>lifespan<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> rnd<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Will also render the child</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>ComposedParticle</code> could be used either as a standalone or within an existing <code>Particle</code> tree.</p>`,62)]))}const o=s(t,[["render",c],["__file","particles.html.vue"]]),u=JSON.parse('{"path":"/guide/flame/rendering/particles.html","title":"Particles","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Lifecycle","slug":"lifecycle","link":"#lifecycle","children":[]},{"level":2,"title":"Built-in particles","slug":"built-in-particles","link":"#built-in-particles","children":[]},{"level":2,"title":"TranslatedParticle","slug":"translatedparticle","link":"#translatedparticle","children":[]},{"level":2,"title":"MovingParticle","slug":"movingparticle","link":"#movingparticle","children":[]},{"level":2,"title":"AcceleratedParticle","slug":"acceleratedparticle","link":"#acceleratedparticle","children":[]},{"level":2,"title":"CircleParticle","slug":"circleparticle","link":"#circleparticle","children":[]},{"level":2,"title":"SpriteParticle","slug":"spriteparticle","link":"#spriteparticle","children":[]},{"level":2,"title":"ImageParticle","slug":"imageparticle","link":"#imageparticle","children":[]},{"level":2,"title":"ScalingParticle","slug":"scalingparticle","link":"#scalingparticle","children":[]},{"level":2,"title":"SpriteAnimationParticle","slug":"spriteanimationparticle","link":"#spriteanimationparticle","children":[]},{"level":2,"title":"ComponentParticle","slug":"componentparticle","link":"#componentparticle","children":[]},{"level":2,"title":"ComputedParticle","slug":"computedparticle","link":"#computedparticle","children":[]},{"level":2,"title":"Nesting behavior","slug":"nesting-behavior","link":"#nesting-behavior","children":[]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":2,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/rendering/particles.md"}');export{o as comp,u as data};
