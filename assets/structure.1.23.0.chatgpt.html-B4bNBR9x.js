import{_ as n,c as a,f as e,o as p}from"./app-BZlJFCNj.js";const l={};function t(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="资源目录结构" tabindex="-1"><a class="header-anchor" href="#资源目录结构"><span>资源目录结构</span></a></h1><p>Flame 提供了一种建议的项目目录结构，其中包括标准的 Flutter <code>assets</code> 目录以及一些子目录：<code>audio</code>、<code>images</code> 和 <code>tiles</code>。</p><p>如果使用以下示例代码：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyGame</span> <span class="token keyword">extends</span> <span class="token class-name">FlameGame</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token class-name">FlameAudio</span><span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;explosion.mp3&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 加载一些图片</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;player.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;enemy.png&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 或者加载 images 文件夹中的所有图片</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token class-name">Flame</span><span class="token punctuation">.</span>images<span class="token punctuation">.</span><span class="token function">loadAllImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">final</span> map1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">TiledComponent</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;level.tmx&#39;</span></span><span class="token punctuation">,</span> tileSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是 Flame 期望找到文件的目录结构：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">.</span>
<span class="line">└── assets</span>
<span class="line">    ├── audio</span>
<span class="line">    │   └── explosion.mp3</span>
<span class="line">    ├── images</span>
<span class="line">    │   ├── enemy.png</span>
<span class="line">    │   ├── player.png</span>
<span class="line">    │   └── spritesheet.png</span>
<span class="line">    └── tiles</span>
<span class="line">        ├── level.tmx</span>
<span class="line">        └── map.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以选择将 <code>audio</code> 文件夹进一步划分为两个子文件夹：一个用于 <code>music</code>，另一个用于 <code>sfx</code>。</p><p>别忘了在 <code>pubspec.yaml</code> 文件中添加这些资源文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">flutter</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">assets</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> assets/audio/explosion.mp3</span>
<span class="line">    <span class="token punctuation">-</span> assets/images/player.png</span>
<span class="line">    <span class="token punctuation">-</span> assets/images/enemy.png</span>
<span class="line">    <span class="token punctuation">-</span> assets/tiles/level.tmx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您想更改此结构，可以使用 <code>prefix</code> 参数，并创建您自己的 <code>AssetsCache</code>、<code>Images</code> 和 <code>AudioCache</code> 实例，而不是使用 Flame 提供的全局实例。</p><p>此外，<code>AssetsCache</code> 和 <code>Images</code> 还可以接受自定义的 <a href="https://api.flutter.dev/flutter/services/AssetBundle-class.html" target="_blank" rel="noopener noreferrer"><code>AssetBundle</code></a>。这可以用于让 Flame 从其他位置（例如文件系统）而不是默认的 <code>rootBundle</code> 中加载资源。</p>`,11)]))}const o=n(l,[["render",t],["__file","structure.1.23.0.chatgpt.html.vue"]]),d=JSON.parse('{"path":"/guide/flame/structure.1.23.0.chatgpt.html","title":"资源目录结构","lang":"en-US","frontmatter":{},"headers":[],"git":{},"filePathRelative":"guide/flame/structure.1.23.0.chatgpt.md"}');export{o as comp,d as data};
