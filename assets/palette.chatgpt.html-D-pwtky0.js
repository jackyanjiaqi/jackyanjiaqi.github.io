import{_ as n,c as s,f as e,o as t}from"./app-B8TszOv9.js";const l={};function p(c,a){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="调色板-palette" tabindex="-1"><a class="header-anchor" href="#调色板-palette"><span>调色板（Palette）</span></a></h1><p>在游戏开发中，你会在很多地方需要使用颜色。<code>dart:ui</code> 提供了两个相关的类：<code>Color</code> 和 <code>Paint</code>。</p><h2 id="color-类" tabindex="-1"><a class="header-anchor" href="#color-类"><span><strong><code>Color</code> 类</strong></span></a></h2><p><code>Color</code> 类以十六进制整数格式表示 ARGB 颜色。要创建一个 <code>Color</code> 实例，只需要以 ARGB 格式将颜色作为整数传递即可。</p><p>你可以使用 Dart 的十六进制表示法来简化操作。例如：<code>0xFF00FF00</code> 表示完全不透明的绿色（格式为 <code>0xAARRGGBB</code>）。</p><p><strong>注意：</strong> 与常规（非 A）RGB 不同，前两个十六进制数字用于表示 alpha 通道（透明度）。<code>FF</code>（255）表示完全不透明，<code>00</code>（0）表示完全透明。</p><p>在 Flutter 的 Material 包中，有一个 <code>Colors</code> 类提供了一些常用颜色的常量，例如：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span> <span class="token keyword">show</span> <span class="token class-name">Colors</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> black <span class="token operator">=</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="paint-类" tabindex="-1"><a class="header-anchor" href="#paint-类"><span><strong><code>Paint</code> 类</strong></span></a></h2><p>一些更复杂的方法可能需要使用 <code>Paint</code> 对象。<code>Paint</code> 是一个更全面的结构，可以配置与描边、颜色、滤镜以及混合相关的属性。</p><p>通常，在使用复杂的 API 时，你可能只需要一个表示单一纯色的 <code>Paint</code> 实例。例如：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">Paint</span> green <span class="token operator">=</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF00FF00</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意：</strong> 我们不建议每次需要特定 <code>Paint</code> 时都新建一个对象，因为这可能会导致大量不必要的对象被创建。更好的方法是：</p><ol><li>定义一个可以复用的 <code>Paint</code> 对象（但要注意 <code>Paint</code> 类是可变的，与 <code>Color</code> 不同）。</li><li>使用 <code>Palette</code> 类，统一定义游戏中使用的所有颜色。</li></ol><hr><h2 id="flame-的-palette-类" tabindex="-1"><a class="header-anchor" href="#flame-的-palette-类"><span><strong>Flame 的 <code>Palette</code> 类</strong></span></a></h2><p>为了帮助你管理颜色并保持游戏调色板的一致性，Flame 提供了 <code>Palette</code> 类。通过它，你可以轻松地访问 <code>Color</code> 和 <code>Paint</code>，并将游戏中使用的颜色定义为常量，避免混淆。</p><h3 id="basicpalette-类" tabindex="-1"><a class="header-anchor" href="#basicpalette-类"><span><strong><code>BasicPalette</code> 类</strong></span></a></h3><p><code>BasicPalette</code> 是一个简单的调色板示例，提供了黑色和白色。例如，可以通过以下方式访问黑色或白色：</p><ul><li>使用 <code>color</code> 属性：</li></ul><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token class-name">TextConfig</span> regular <span class="token operator">=</span> <span class="token class-name">TextConfig</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">BasicPalette</span><span class="token punctuation">.</span>white<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>使用 <code>paint</code> 属性：</li></ul><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token class-name">BasicPalette</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span>paint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="自定义调色板" tabindex="-1"><a class="header-anchor" href="#自定义调色板"><span><strong>自定义调色板</strong></span></a></h3><p>通常情况下，你会根据 <code>BasicPalette</code> 的示例创建自己的调色板，并定义游戏的颜色方案。这样，你就可以在组件和类中静态访问任何颜色。</p><p>以下是一个自定义 <code>Palette</code> 的示例，来自 <a href="https://github.com/bluefireteam/bgug/blob/master/lib/palette.dart" target="_blank" rel="noopener noreferrer">示例游戏 BGUG</a>：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:ui&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flame/palette.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token class-name">PaletteEntry</span> white <span class="token operator">=</span> <span class="token class-name">BasicPalette</span><span class="token punctuation">.</span>white<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">static</span> <span class="token class-name">PaletteEntry</span> toastBackground <span class="token operator">=</span> <span class="token class-name">PaletteEntry</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFFAC3232</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token class-name">PaletteEntry</span> toastText <span class="token operator">=</span> <span class="token class-name">PaletteEntry</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFFDA9A00</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">static</span> <span class="token class-name">PaletteEntry</span> grey <span class="token operator">=</span> <span class="token class-name">PaletteEntry</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF404040</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token class-name">PaletteEntry</span> green <span class="token operator">=</span> <span class="token class-name">PaletteEntry</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF54a286</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="paletteentry-类" tabindex="-1"><a class="header-anchor" href="#paletteentry-类"><span><strong><code>PaletteEntry</code> 类</strong></span></a></h3><p><code>PaletteEntry</code> 是一个 <code>const</code> 类，用于保存颜色信息。它包含以下成员：</p><ul><li><strong><code>color</code></strong>：返回指定的 <code>Color</code>。</li><li><strong><code>paint</code></strong>：创建一个具有指定颜色的新 <code>Paint</code>。<code>Paint</code> 是一个非 <code>const</code> 类，因此每次调用此方法都会创建一个全新的实例，适合在渲染时动态调整属性。</li></ul>`,32)]))}const i=n(l,[["render",p],["__file","palette.chatgpt.html.vue"]]),r=JSON.parse('{"path":"/guide/flame/rendering/palette.chatgpt.html","title":"调色板（Palette）","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Color 类","slug":"color-类","link":"#color-类","children":[]},{"level":2,"title":"Paint 类","slug":"paint-类","link":"#paint-类","children":[]},{"level":2,"title":"Flame 的 Palette 类","slug":"flame-的-palette-类","link":"#flame-的-palette-类","children":[{"level":3,"title":"BasicPalette 类","slug":"basicpalette-类","link":"#basicpalette-类","children":[]},{"level":3,"title":"自定义调色板","slug":"自定义调色板","link":"#自定义调色板","children":[]},{"level":3,"title":"PaletteEntry 类","slug":"paletteentry-类","link":"#paletteentry-类","children":[]}]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":1,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/rendering/palette.chatgpt.md"}');export{i as comp,r as data};
