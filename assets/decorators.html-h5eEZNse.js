import{_ as i,c as l,a,b as n,d as t,e as o,f as r,r as c,o as d}from"./app-BZlJFCNj.js";const p={};function u(h,e){const s=c("RouteLink");return d(),l("div",null,[e[10]||(e[10]=a("h1",{id:"decorators",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#decorators"},[a("span",null,"Decorators")])],-1)),a("p",null,[e[2]||(e[2]=a("strong",null,"Decorators",-1)),e[3]||(e[3]=n(" are classes that can encapsulate certain visual effects and then apply those visual effects to a sequence of canvas drawing operations. Decorators are not ")),t(s,{to:"/guide/flame/components.html#component"},{default:o(()=>e[0]||(e[0]=[n("Component")])),_:1}),e[4]||(e[4]=n("s, but they can be applied to components either manually or via the ")),e[5]||(e[5]=a("a",{href:"#hasdecorator-mixin"},"HasDecorator",-1)),e[6]||(e[6]=n(" mixin. Likewise, decorators are not ")),t(s,{to:"/guide/flame/effects.html"},{default:o(()=>e[1]||(e[1]=[n("Effect")])),_:1}),e[7]||(e[7]=n("s, although they can be used to implement certain ")),e[8]||(e[8]=a("code",null,"Effect",-1)),e[9]||(e[9]=n("s."))]),e[11]||(e[11]=r(`<p>There are a certain number of decorators available in Flame, and it is simple to add one&#39;s own if necessary. We are planning to add shader-based decorators once Flutter fully supports them on the web.</p><h2 id="flame-built-in-decorators" tabindex="-1"><a class="header-anchor" href="#flame-built-in-decorators"><span>Flame built-in decorators</span></a></h2><h3 id="paintdecorator-blur" tabindex="-1"><a class="header-anchor" href="#paintdecorator-blur"><span>PaintDecorator.blur</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: decorator_blur</span>
<span class="line">:show: widget code infobox</span>
<span class="line">:width: 180</span>
<span class="line">:height: 160</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This decorator applies a Gaussian blur to the underlying component. The amount of blur can be different in the X and Y direction, though this is not very common.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Possible uses:</p><ul><li>soft shadows;</li><li>&quot;out-of-focus&quot; objects in the distance or very close to the camera;</li><li>motion blur effects;</li><li>deemphasize/obscure content when showing a popup dialog;</li><li>blurred vision when the character is drunk.</li></ul><h3 id="paintdecorator-grayscale" tabindex="-1"><a class="header-anchor" href="#paintdecorator-grayscale"><span>PaintDecorator.grayscale</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: decorator_grayscale</span>
<span class="line">:show: widget code infobox</span>
<span class="line">:width: 180</span>
<span class="line">:height: 160</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This decorator converts the underlying image into the shades of grey, as if it was a black-and-white photograph. In addition, you can make the image semi-transparent to the desired level of <code>opacity</code>.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">grayscale</span><span class="token punctuation">(</span>opacity<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Possible uses:</p><ul><li>apply to an NPC to turn them into stone, or into a ghost!</li><li>apply to a scene to indicate that it is a memory of the past;</li><li>black-and-white photos.</li></ul><h3 id="paintdecorator-tint" tabindex="-1"><a class="header-anchor" href="#paintdecorator-tint"><span>PaintDecorator.tint</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: decorator_tint</span>
<span class="line">:show: widget code infobox</span>
<span class="line">:width: 180</span>
<span class="line">:height: 160</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This decorator <em>tints</em> the underlying image with the specified color, as if watching it through a colored glass. It is recommended that the <code>color</code> used by this decorator was semi-transparent, so that you can see the details of the image below.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">PaintDecorator</span><span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xAAFF0000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Possible uses:</p><ul><li>NPCs affected by certain types of magic;</li><li>items/characters in the shadows can be tinted black;</li><li>tint the scene red to show bloodlust, or that the character is low on health;</li><li>tint green to show that the character is poisoned or sick;</li><li>tint the scene deep blue during the night time;</li></ul><h3 id="rotate3ddecorator" tabindex="-1"><a class="header-anchor" href="#rotate3ddecorator"><span>Rotate3DDecorator</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: decorator_rotate3d</span>
<span class="line">:show: widget code infobox</span>
<span class="line">:width: 180</span>
<span class="line">:height: 160</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This decorator applies a 3D rotation to the underlying component. You can specify the angles of the rotation, as well as the pivot point and the amount of perspective distortion to apply.</p><p>The decorator also supplies the <code>isFlipped</code> property, which allows you to determine whether the component is currently being viewed from the front side or from the back. This is useful if you want to draw a component whose appearance is different in the front and in the back.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">Rotate3DDecorator</span><span class="token punctuation">(</span></span>
<span class="line">  center<span class="token punctuation">:</span> component<span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">  angleX<span class="token punctuation">:</span> rotationAngle<span class="token punctuation">,</span></span>
<span class="line">  perspective<span class="token punctuation">:</span> <span class="token number">0.002</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Possible uses:</p><ul><li>a card that can be flipped over;</li><li>pages in a book;</li><li>transitions between app routes;</li><li>3d falling particles such as snowflakes or leaves.</li></ul><h3 id="shadow3ddecorator" tabindex="-1"><a class="header-anchor" href="#shadow3ddecorator"><span>Shadow3DDecorator</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">:sources: ../flame/examples</span>
<span class="line">:page: decorator_shadow3d</span>
<span class="line">:show: widget code infobox</span>
<span class="line">:width: 180</span>
<span class="line">:height: 160</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This decorator renders a shadow underneath the component, as if the component was a 3D object standing on a plane. This effect works best for games that use isometric camera projection.</p><p>The shadow produced by this generator is quite flexible: you can control its angle, length, opacity, blur, etc. For a full description of what properties this decorator has and their meaning, see the class documentation.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">final</span> decorator <span class="token operator">=</span> <span class="token class-name">Shadow3DDecorator</span><span class="token punctuation">(</span></span>
<span class="line">  base<span class="token punctuation">:</span> <span class="token class-name">Vector2</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  angle<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.4</span><span class="token punctuation">,</span></span>
<span class="line">  xShift<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">  yScale<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line">  opacity<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  blur<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The primary purpose of this decorator is to add shadows on the ground to your components. The main limitation is that the shadows are flat and cannot interact with the environment. For example, this decorator cannot handle shadows that fall onto walls or other vertical structures.</p><h2 id="using-decorators" tabindex="-1"><a class="header-anchor" href="#using-decorators"><span>Using decorators</span></a></h2><h3 id="hasdecorator-mixin" tabindex="-1"><a class="header-anchor" href="#hasdecorator-mixin"><span>HasDecorator mixin</span></a></h3><p>This <code>Component</code> mixin adds the <code>decorator</code> property, which is initially <code>null</code>. If you set this property to an actual <code>Decorator</code> object, then that decorator will apply its visual effect during the rendering of the component. In order to remove this visual effect, simply set the <code>decorator</code> property back to <code>null</code>.</p><h3 id="positioncomponent" tabindex="-1"><a class="header-anchor" href="#positioncomponent"><span>PositionComponent</span></a></h3><p><code>PositionComponent</code> (and all the derived classes) already has a <code>decorator</code> property, so for these components the <code>HasDecorator</code> mixin is not needed.</p><p>In fact, the <code>PositionComponent</code> uses its decorator in order to properly position the component on the screen. Thus, any new decorators that you&#39;d want to apply to the <code>PositionComponent</code> will need to be chained (see the <a href="#multiple-decorators"></a> section below).</p><p>It is also possible to replace the root decorator of the <code>PositionComponent</code>, if you want to create an alternative logic for how the component shall be positioned on the screen.</p><h3 id="multiple-decorators" tabindex="-1"><a class="header-anchor" href="#multiple-decorators"><span>Multiple decorators</span></a></h3><p>It is possible to apply several decorators simultaneously to the same component: the <code>Decorator</code> class supports chaining. That is, if you have an existing decorator on a component and you want to add another one, then you can call <code>component.decorator.addLast(newDecorator)</code> -- this will add the new decorator at the end of the existing chain. The method <code>removeLast()</code> can remove that decorator later.</p><p>Several decorators can be chain that way. For example, if <code>A</code> is an initial decorator, then <code>A.addLast(B)</code> can be followed by either <code>A.addLast(C)</code> or <code>B.addLast(C)</code> -- and in both cases the chain <code>A -&gt; B -&gt; C</code> will be created. In practice, it means that the entire chain can be manipulated from its root, which usually is <code>component.decorator</code>.</p>`,43))])}const b=i(p,[["render",u],["__file","decorators.html.vue"]]),v=JSON.parse('{"path":"/guide/flame/rendering/decorators.html","title":"Decorators","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Flame built-in decorators","slug":"flame-built-in-decorators","link":"#flame-built-in-decorators","children":[{"level":3,"title":"PaintDecorator.blur","slug":"paintdecorator-blur","link":"#paintdecorator-blur","children":[]},{"level":3,"title":"PaintDecorator.grayscale","slug":"paintdecorator-grayscale","link":"#paintdecorator-grayscale","children":[]},{"level":3,"title":"PaintDecorator.tint","slug":"paintdecorator-tint","link":"#paintdecorator-tint","children":[]},{"level":3,"title":"Rotate3DDecorator","slug":"rotate3ddecorator","link":"#rotate3ddecorator","children":[]},{"level":3,"title":"Shadow3DDecorator","slug":"shadow3ddecorator","link":"#shadow3ddecorator","children":[]}]},{"level":2,"title":"Using decorators","slug":"using-decorators","link":"#using-decorators","children":[{"level":3,"title":"HasDecorator mixin","slug":"hasdecorator-mixin","link":"#hasdecorator-mixin","children":[]},{"level":3,"title":"PositionComponent","slug":"positioncomponent","link":"#positioncomponent","children":[]},{"level":3,"title":"Multiple decorators","slug":"multiple-decorators","link":"#multiple-decorators","children":[]}]}],"git":{"updatedTime":1735743451000,"contributors":[{"name":"JackYanjiaqi","username":"JackYanjiaqi","email":"jackyanjiaqi@gmail.com","commits":2,"url":"https://github.com/JackYanjiaqi"}]},"filePathRelative":"guide/flame/rendering/decorators.md"}');export{b as comp,v as data};
